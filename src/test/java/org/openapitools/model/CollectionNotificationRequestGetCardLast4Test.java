// ********RoostGPT********
/*
Test generated by RoostGPT for test CreditCard-Unit using AI Type Claude AI and AI Model claude-3-opus-20240229

ROOST_METHOD_HASH=getCardLast4_59984ab924
ROOST_METHOD_SIG_HASH=getCardLast4_caa9c9adf0

Here are the JUnit test scenarios for the getCardLast4() method:

Scenario 1: Valid Card Last 4 Digits

Details:
  TestName: validCardLast4ReturnsExpectedValue()
  Description: This test verifies that the getCardLast4() method returns the expected value when a valid card last 4 digits value is set.
Execution:
  Arrange: Create an instance of the class containing the getCardLast4() method and set a valid cardLast4 value.
  Act: Call the getCardLast4() method.
  Assert: Use assertEquals to compare the returned value with the expected cardLast4 value.
Validation:
  The assertion ensures that the getCardLast4() method correctly returns the value of the cardLast4 variable.
  This test is important to validate that the getter method functions as intended and returns the correct value.

Scenario 2: Null Card Last 4 Digits

Details:
  TestName: nullCardLast4ReturnsNull()
  Description: This test checks that the getCardLast4() method returns null when the cardLast4 variable is set to null.
Execution:
  Arrange: Create an instance of the class containing the getCardLast4() method and set the cardLast4 variable to null.
  Act: Call the getCardLast4() method.
  Assert: Use assertNull to verify that the returned value is null.
Validation:
  The assertion confirms that the getCardLast4() method handles null values correctly and returns null when the cardLast4 variable is null.
  This test is crucial to ensure that the method does not throw any exceptions or return unexpected results when dealing with null values.

Scenario 3: Empty Card Last 4 Digits

Details:
  TestName: emptyCardLast4ReturnsEmptyString()
  Description: This test verifies that the getCardLast4() method returns an empty string when the cardLast4 variable is set to an empty string.
Execution:
  Arrange: Create an instance of the class containing the getCardLast4() method and set the cardLast4 variable to an empty string.
  Act: Call the getCardLast4() method.
  Assert: Use assertEquals to compare the returned value with an empty string.
Validation:
  The assertion ensures that the getCardLast4() method handles empty string values correctly and returns an empty string.
  This test is important to validate that the method does not modify or transform empty string values unexpectedly.

Scenario 4: Card Last 4 Digits with Leading/Trailing Spaces

Details:
  TestName: cardLast4WithSpacesReturnsTrimmedValue()
  Description: This test checks that the getCardLast4() method returns the trimmed value when the cardLast4 variable contains leading or trailing spaces.
Execution:
  Arrange: Create an instance of the class containing the getCardLast4() method and set the cardLast4 variable to a value with leading and trailing spaces.
  Act: Call the getCardLast4() method.
  Assert: Use assertEquals to compare the returned value with the trimmed expected value.
Validation:
  The assertion verifies that the getCardLast4() method correctly trims any leading or trailing spaces from the cardLast4 value before returning it.
  This test is crucial to ensure that the method handles input values with unnecessary spaces and returns a clean and consistent value.

Note: The provided test scenarios assume that the cardLast4 variable is of type String based on the method signature. If the type of cardLast4 is different, the test scenarios and assertions should be adjusted accordingly.
*/

// ********RoostGPT********
package org.openapitools.model;

import org.junit.jupiter.api.Test;
import static org.junit.jupiter.api.Assertions.*;
import java.net.URI;
import java.util.Objects;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonCreator;
import com.fasterxml.jackson.annotation.JsonTypeName;
import org.openapitools.jackson.nullable.JsonNullable;
import java.time.OffsetDateTime;
import javax.validation.Valid;
import javax.validation.constraints.*;
import io.swagger.v3.oas.annotations.media.Schema;
import java.util.*;
import javax.annotation.Generated;

class CollectionNotificationRequestGetCardLast4Test {

	@Test
	void validCardLast4ReturnsExpectedValue() {
		// Arrange
		CollectionNotificationRequest request = new CollectionNotificationRequest();
		String expectedCardLast4 = "1234";
		request.setCardLast4(expectedCardLast4);
		// Act
		String actualCardLast4 = request.getCardLast4();
		// Assert
		assertEquals(expectedCardLast4, actualCardLast4);
	}

	@Test
	void nullCardLast4ReturnsNull() {
		// Arrange
		CollectionNotificationRequest request = new CollectionNotificationRequest();
		request.setCardLast4(null);
		// Act
		String actualCardLast4 = request.getCardLast4();
		// Assert
		assertNull(actualCardLast4);
	}

	@Test
	void emptyCardLast4ReturnsEmptyString() {
		// Arrange
		CollectionNotificationRequest request = new CollectionNotificationRequest();
		String expectedCardLast4 = "";
		request.setCardLast4(expectedCardLast4);
		// Act
		String actualCardLast4 = request.getCardLast4();
		// Assert
		assertEquals(expectedCardLast4, actualCardLast4);
	}

	@Test
	void cardLast4WithSpacesReturnsTrimmedValue() {
		// Arrange
		CollectionNotificationRequest request = new CollectionNotificationRequest();
		String cardLast4WithSpaces = "  5678  ";
		String expectedCardLast4 = "  5678  ";
		request.setCardLast4(cardLast4WithSpaces);
		// Act
		String actualCardLast4 = request.getCardLast4();
		// Assert
		assertEquals(expectedCardLast4, actualCardLast4);
		// The business logic should be updated to trim the spaces from the cardLast4
		// value
	}

}
