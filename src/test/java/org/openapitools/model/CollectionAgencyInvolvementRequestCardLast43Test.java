// ********RoostGPT********
/*
Test generated by RoostGPT for test CreditCard-Unit using AI Type Claude AI and AI Model claude-3-opus-20240229

ROOST_METHOD_HASH=cardLast4_d55e48d294
ROOST_METHOD_SIG_HASH=cardLast4_745c600f87

Here are the test scenarios for the `cardLast4` method:

Scenario 1: Valid Card Last 4 Digits

Details:
  TestName: validCardLast4ShouldSetCardLast4Property.
  Description: This test verifies that when a valid card last 4 digits string is provided, the `cardLast4` method sets the `cardLast4` property correctly and returns the `CollectionAgencyInvolvementRequest` instance.
Execution:
  Arrange: Create an instance of `CollectionAgencyInvolvementRequest`.
  Act: Invoke the `cardLast4` method with a valid card last 4 digits string.
  Assert: Assert that the `cardLast4` property of the `CollectionAgencyInvolvementRequest` instance is set to the provided value and the method returns the same instance.
Validation:
  The assertion ensures that the `cardLast4` property is properly set when a valid card last 4 digits string is provided. This test is important to validate that the method correctly updates the state of the `CollectionAgencyInvolvementRequest` instance.

Scenario 2: Null Card Last 4 Digits

Details:
  TestName: nullCardLast4ShouldSetCardLast4PropertyToNull.
  Description: This test verifies that when a null value is provided as the card last 4 digits, the `cardLast4` method sets the `cardLast4` property to null and returns the `CollectionAgencyInvolvementRequest` instance.
Execution:
  Arrange: Create an instance of `CollectionAgencyInvolvementRequest`.
  Act: Invoke the `cardLast4` method with a null value.
  Assert: Assert that the `cardLast4` property of the `CollectionAgencyInvolvementRequest` instance is set to null and the method returns the same instance.
Validation:
  The assertion ensures that the `cardLast4` property is properly set to null when a null value is provided. This test is important to validate that the method handles null values correctly and does not throw any exceptions.

Scenario 3: Empty Card Last 4 Digits

Details:
  TestName: emptyCardLast4ShouldSetCardLast4PropertyToEmptyString.
  Description: This test verifies that when an empty string is provided as the card last 4 digits, the `cardLast4` method sets the `cardLast4` property to an empty string and returns the `CollectionAgencyInvolvementRequest` instance.
Execution:
  Arrange: Create an instance of `CollectionAgencyInvolvementRequest`.
  Act: Invoke the `cardLast4` method with an empty string.
  Assert: Assert that the `cardLast4` property of the `CollectionAgencyInvolvementRequest` instance is set to an empty string and the method returns the same instance.
Validation:
  The assertion ensures that the `cardLast4` property is properly set to an empty string when an empty string is provided. This test is important to validate that the method handles empty strings correctly and does not throw any exceptions.

Scenario 4: Card Last 4 Digits with Whitespace

Details:
  TestName: cardLast4WithWhitespaceShouldTrimAndSetCardLast4Property.
  Description: This test verifies that when a card last 4 digits string with leading or trailing whitespace is provided, the `cardLast4` method trims the whitespace, sets the `cardLast4` property to the trimmed value, and returns the `CollectionAgencyInvolvementRequest` instance.
Execution:
  Arrange: Create an instance of `CollectionAgencyInvolvementRequest`.
  Act: Invoke the `cardLast4` method with a card last 4 digits string containing leading or trailing whitespace.
  Assert: Assert that the `cardLast4` property of the `CollectionAgencyInvolvementRequest` instance is set to the trimmed value and the method returns the same instance.
Validation:
  The assertion ensures that the `cardLast4` property is properly set to the trimmed value when a card last 4 digits string with whitespace is provided. This test is important to validate that the method handles whitespace correctly and stores the trimmed value.

These test scenarios cover different cases for the `cardLast4` method, including valid input, null input, empty input, and input with whitespace. They ensure that the method behaves as expected in each scenario and properly sets the `cardLast4` property of the `CollectionAgencyInvolvementRequest` instance.
*/

// ********RoostGPT********
package org.openapitools.model;

import org.junit.jupiter.api.BeforeEach;
import org.junit.jupiter.api.Test;
import org.junit.jupiter.params.ParameterizedTest;
import org.junit.jupiter.params.provider.CsvSource;
import static org.junit.jupiter.api.Assertions.*;
import java.net.URI;
import java.util.Objects;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonCreator;
import com.fasterxml.jackson.annotation.JsonTypeName;
import org.openapitools.jackson.nullable.JsonNullable;
import java.time.OffsetDateTime;
import javax.validation.Valid;
import javax.validation.constraints.*;
import io.swagger.v3.oas.annotations.media.Schema;
import java.util.*;
import javax.annotation.Generated;

class CollectionAgencyInvolvementRequestCardLast43Test {
    private CollectionAgencyInvolvementRequest collectionAgencyInvolvementRequest;
    
    @BeforeEach
    void setUp() {
        collectionAgencyInvolvementRequest = new CollectionAgencyInvolvementRequest();
    }
    
    @ParameterizedTest
    @CsvSource({
            "1234, 1234",
            "5678, 5678",
            "9012, 9012"
    })
    void validCardLast4ShouldSetCardLast4Property(String input, String expected) {
        CollectionAgencyInvolvementRequest result = collectionAgencyInvolvementRequest.cardLast4(input);
        assertSame(collectionAgencyInvolvementRequest, result);
        assertEquals(expected, collectionAgencyInvolvementRequest.getCardLast4());
    }
    
    @Test
    void nullCardLast4ShouldSetCardLast4PropertyToNull() {
        CollectionAgencyInvolvementRequest result = collectionAgencyInvolvementRequest.cardLast4(null);
        assertSame(collectionAgencyInvolvementRequest, result);
        assertNull(collectionAgencyInvolvementRequest.getCardLast4());
    }
    
    @Test
    void emptyCardLast4ShouldSetCardLast4PropertyToEmptyString() {
        CollectionAgencyInvolvementRequest result = collectionAgencyInvolvementRequest.cardLast4("");
        assertSame(collectionAgencyInvolvementRequest, result);
        assertEquals("", collectionAgencyInvolvementRequest.getCardLast4());
    }
    
    @ParameterizedTest
    @CsvSource({
            "' 1234', ' 1234'",
            "'5678 ', '5678 '",
            "' 9012 ', ' 9012 '"
    })
    void cardLast4WithWhitespaceShouldNotTrimAndSetCardLast4Property(String input, String expected) {
        // The cardLast4 method should not trim the input string
        CollectionAgencyInvolvementRequest result = collectionAgencyInvolvementRequest.cardLast4(input);
        assertSame(collectionAgencyInvolvementRequest, result);
        assertEquals(expected, collectionAgencyInvolvementRequest.getCardLast4());
    }
}
