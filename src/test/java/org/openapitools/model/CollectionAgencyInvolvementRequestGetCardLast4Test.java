// ********RoostGPT********
/*
Test generated by RoostGPT for test CreditCard-Unit using AI Type Claude AI and AI Model claude-3-opus-20240229

ROOST_METHOD_HASH=getCardLast4_59984ab924
ROOST_METHOD_SIG_HASH=getCardLast4_caa9c9adf0

Here are the JUnit test scenarios for the provided `getCardLast4` method:

Scenario 1: Valid Card Last 4 Digits

Details:
  TestName: validCardLast4ReturnsExpectedValue
  Description: This test verifies that the `getCardLast4` method returns the expected value when a valid card last 4 digits string is set.
Execution:
  Arrange: Create an instance of the class containing the `getCardLast4` method and set a valid card last 4 digits string.
  Act: Invoke the `getCardLast4` method.
  Assert: Use `assertEquals` to compare the returned value with the expected card last 4 digits string.
Validation:
  The assertion verifies that the `getCardLast4` method correctly returns the card last 4 digits string that was set.
  This test ensures that the method behaves as expected when a valid card last 4 digits string is provided.

Scenario 2: Null Card Last 4 Digits

Details:
  TestName: nullCardLast4ReturnsNull
  Description: This test checks that the `getCardLast4` method returns null when the card last 4 digits string is set to null.
Execution:
  Arrange: Create an instance of the class containing the `getCardLast4` method and set the card last 4 digits string to null.
  Act: Invoke the `getCardLast4` method.
  Assert: Use `assertNull` to verify that the returned value is null.
Validation:
  The assertion confirms that the `getCardLast4` method returns null when the card last 4 digits string is set to null.
  This test ensures that the method handles null values correctly and doesn't throw any exceptions.

Scenario 3: Empty Card Last 4 Digits

Details:
  TestName: emptyCardLast4ReturnsEmptyString
  Description: This test verifies that the `getCardLast4` method returns an empty string when the card last 4 digits string is set to an empty string.
Execution:
  Arrange: Create an instance of the class containing the `getCardLast4` method and set the card last 4 digits string to an empty string.
  Act: Invoke the `getCardLast4` method.
  Assert: Use `assertEquals` to compare the returned value with an empty string.
Validation:
  The assertion ensures that the `getCardLast4` method returns an empty string when the card last 4 digits string is set to an empty string.
  This test validates that the method handles empty strings correctly and doesn't modify or trim the value.

Scenario 4: Card Last 4 Digits with Leading/Trailing Spaces

Details:
  TestName: cardLast4WithSpacesReturnsUnmodifiedValue
  Description: This test checks that the `getCardLast4` method returns the card last 4 digits string without modifying or trimming any leading/trailing spaces.
Execution:
  Arrange: Create an instance of the class containing the `getCardLast4` method and set the card last 4 digits string with leading/trailing spaces.
  Act: Invoke the `getCardLast4` method.
  Assert: Use `assertEquals` to compare the returned value with the expected card last 4 digits string, including the spaces.
Validation:
  The assertion verifies that the `getCardLast4` method returns the card last 4 digits string exactly as it was set, without removing any leading/trailing spaces.
  This test ensures that the method preserves the original formatting of the card last 4 digits string.

Note: The provided method is a simple getter method, so the test scenarios are limited to verifying the basic behavior of returning the stored value. If there are any additional constraints or validation rules related to the card last 4 digits string, more test scenarios may be required to cover those cases.
*/

// ********RoostGPT********
package org.openapitools.model;

import org.junit.jupiter.api.BeforeEach;
import org.junit.jupiter.api.Test;
import org.junit.jupiter.params.ParameterizedTest;
import org.junit.jupiter.params.provider.ValueSource;
import static org.junit.jupiter.api.Assertions.*;
import java.net.URI;
import java.util.Objects;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonCreator;
import com.fasterxml.jackson.annotation.JsonTypeName;
import org.openapitools.jackson.nullable.JsonNullable;
import java.time.OffsetDateTime;
import javax.validation.Valid;
import javax.validation.constraints.*;
import io.swagger.v3.oas.annotations.media.Schema;
import java.util.*;
import javax.annotation.Generated;

class CollectionAgencyInvolvementRequestGetCardLast4Test {

	private CollectionAgencyInvolvementRequest request;

	@BeforeEach
	void setUp() {
		request = new CollectionAgencyInvolvementRequest();
	}

	@Test
	void validCardLast4ReturnsExpectedValue() {
		String expectedCardLast4 = "1234";
		request.setCardLast4(expectedCardLast4);
		String actualCardLast4 = request.getCardLast4();
		assertEquals(expectedCardLast4, actualCardLast4);
	}

	@Test
	void nullCardLast4ReturnsNull() {
		request.setCardLast4(null);
		String actualCardLast4 = request.getCardLast4();
		assertNull(actualCardLast4);
	}

	@Test
	void emptyCardLast4ReturnsEmptyString() {
		String expectedCardLast4 = "";
		request.setCardLast4(expectedCardLast4);
		String actualCardLast4 = request.getCardLast4();
		assertEquals(expectedCardLast4, actualCardLast4);
	}

	@Test
	void cardLast4WithSpacesReturnsUnmodifiedValue() {
		String expectedCardLast4 = "  1234  ";
		request.setCardLast4(expectedCardLast4);
		String actualCardLast4 = request.getCardLast4();
		assertEquals(expectedCardLast4, actualCardLast4);
	}

	@ParameterizedTest
	@ValueSource(strings = { "1234", "5678", "9012", "3456" })
	void validCardLast4ValuesReturnExpectedResults(String cardLast4) {
		request.setCardLast4(cardLast4);
		String actualCardLast4 = request.getCardLast4();
		assertEquals(cardLast4, actualCardLast4);
	}

}