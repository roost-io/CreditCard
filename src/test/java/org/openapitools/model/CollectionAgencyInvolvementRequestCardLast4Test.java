// ********RoostGPT********
/*
Test generated by RoostGPT for test CreditCard-Unit using AI Type Claude AI and AI Model claude-3-opus-20240229

ROOST_METHOD_HASH=cardLast4_d55e48d294
ROOST_METHOD_SIG_HASH=cardLast4_745c600f87

Here are the test scenarios for the `cardLast4` method:

Scenario 1: Valid card last 4 digits

Details:
  TestName: validCardLast4SetsValue
  Description: This test verifies that providing a valid card last 4 digits string correctly sets the corresponding field in the `CollectionAgencyInvolvementRequest` object.
Execution:
  Arrange: Create an instance of `CollectionAgencyInvolvementRequest`.
  Act: Invoke the `cardLast4` method with a valid string representing the last 4 digits of a card.
  Assert: Assert that the `cardLast4` field of the `CollectionAgencyInvolvementRequest` object is set to the provided value.
Validation:
  The assertion ensures that the `cardLast4` method correctly sets the `cardLast4` field when provided with a valid input. This test is important to validate that the method behaves as expected and properly updates the object's state.

Scenario 2: Null card last 4 digits

Details:
  TestName: nullCardLast4SetsValueToNull
  Description: This test checks that passing a null value to the `cardLast4` method sets the corresponding field to null in the `CollectionAgencyInvolvementRequest` object.
Execution:
  Arrange: Create an instance of `CollectionAgencyInvolvementRequest`.
  Act: Invoke the `cardLast4` method with a null value.
  Assert: Assert that the `cardLast4` field of the `CollectionAgencyInvolvementRequest` object is set to null.
Validation:
  The assertion verifies that the `cardLast4` method handles null input correctly by setting the `cardLast4` field to null. This test ensures that the method does not throw an exception or leave the field in an inconsistent state when provided with a null value.

Scenario 3: Empty card last 4 digits

Details:
  TestName: emptyCardLast4SetsValueToEmptyString
  Description: This test verifies that providing an empty string as the card last 4 digits sets the corresponding field to an empty string in the `CollectionAgencyInvolvementRequest` object.
Execution:
  Arrange: Create an instance of `CollectionAgencyInvolvementRequest`.
  Act: Invoke the `cardLast4` method with an empty string.
  Assert: Assert that the `cardLast4` field of the `CollectionAgencyInvolvementRequest` object is set to an empty string.
Validation:
  The assertion confirms that the `cardLast4` method correctly handles an empty string input by setting the `cardLast4` field to an empty string. This test ensures that the method does not treat an empty string as an invalid input and properly updates the object's state.

Scenario 4: Fluent API behavior

Details:
  TestName: cardLast4ReturnsSameInstance
  Description: This test verifies that the `cardLast4` method follows the fluent API pattern by returning the same instance of the `CollectionAgencyInvolvementRequest` object.
Execution:
  Arrange: Create an instance of `CollectionAgencyInvolvementRequest`.
  Act: Invoke the `cardLast4` method with a valid string and store the returned object.
  Assert: Assert that the returned object is the same instance as the original `CollectionAgencyInvolvementRequest` object.
Validation:
  The assertion ensures that the `cardLast4` method adheres to the fluent API design by returning the same instance of the `CollectionAgencyInvolvementRequest` object. This test validates that the method allows for chained method calls and maintains the object's state throughout the fluent API usage.

These test scenarios cover different aspects of the `cardLast4` method, including valid input, null input, empty string input, and fluent API behavior. They ensure that the method behaves as expected and properly updates the `CollectionAgencyInvolvementRequest` object's state in various scenarios.
*/

// ********RoostGPT********
package org.openapitools.model;

import org.junit.jupiter.api.BeforeEach;
import org.junit.jupiter.api.Test;
import org.junit.jupiter.params.ParameterizedTest;
import org.junit.jupiter.params.provider.CsvSource;
import org.junit.jupiter.params.provider.NullSource;
import org.junit.jupiter.params.provider.ValueSource;
import static org.junit.jupiter.api.Assertions.*;
import java.net.URI;
import java.util.Objects;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonCreator;
import com.fasterxml.jackson.annotation.JsonTypeName;
import org.openapitools.jackson.nullable.JsonNullable;
import java.time.OffsetDateTime;
import javax.validation.Valid;
import javax.validation.constraints.*;
import io.swagger.v3.oas.annotations.media.Schema;
import java.util.*;
import javax.annotation.Generated;

class CollectionAgencyInvolvementRequestCardLast4Test {

	private CollectionAgencyInvolvementRequest request;

	@BeforeEach
	void setUp() {
		request = new CollectionAgencyInvolvementRequest();
	}

	@ParameterizedTest
	@CsvSource({ "1234", "5678", "9012" })
	void validCardLast4SetsValue(String cardLast4) {
		request.cardLast4(cardLast4);
		assertEquals(cardLast4, request.getCardLast4());
	}

	@ParameterizedTest
	@NullSource
	void nullCardLast4SetsValueToNull(String cardLast4) {
		request.cardLast4(cardLast4);
		assertNull(request.getCardLast4());
	}

	@ParameterizedTest
	@ValueSource(strings = { "" })
	void emptyCardLast4SetsValueToEmptyString(String cardLast4) {
		request.cardLast4(cardLast4);
		assertEquals("", request.getCardLast4());
	}

	@Test
	void cardLast4ReturnsSameInstance() {
		CollectionAgencyInvolvementRequest returnedRequest = request.cardLast4("1234");
		assertSame(request, returnedRequest);
	}

}