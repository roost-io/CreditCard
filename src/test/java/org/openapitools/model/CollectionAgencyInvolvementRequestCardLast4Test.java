// ********RoostGPT********
/*
Test generated by RoostGPT for test CreditCard-Unit using AI Type Claude AI and AI Model claude-3-opus-20240229

ROOST_METHOD_HASH=cardLast4_d55e48d294
ROOST_METHOD_SIG_HASH=cardLast4_745c600f87

Here are the JUnit test scenarios for the provided `cardLast4` method:

Scenario 1: Valid Card Last 4 Digits

Details:
  TestName: validCardLast4ShouldSetValue
  Description: This test verifies that when a valid card last 4 digits string is passed to the `cardLast4` method, it sets the `cardLast4` field correctly and returns the `CollectionAgencyInvolvementRequest` instance.
Execution:
  Arrange: Create an instance of `CollectionAgencyInvolvementRequest`.
  Act: Call the `cardLast4` method with a valid card last 4 digits string (e.g., "1234").
  Assert: Assert that the `cardLast4` field of the `CollectionAgencyInvolvementRequest` instance is set to the provided value using `assertEquals`.
Validation:
  The assertion verifies that the `cardLast4` method correctly sets the `cardLast4` field when a valid value is provided.
  This test ensures that the method behaves as expected for a valid input scenario.

Scenario 2: Null Card Last 4 Digits

Details:
  TestName: nullCardLast4ShouldSetValueToNull
  Description: This test checks that when a null value is passed to the `cardLast4` method, it sets the `cardLast4` field to null and returns the `CollectionAgencyInvolvementRequest` instance.
Execution:
  Arrange: Create an instance of `CollectionAgencyInvolvementRequest`.
  Act: Call the `cardLast4` method with a null value.
  Assert: Assert that the `cardLast4` field of the `CollectionAgencyInvolvementRequest` instance is set to null using `assertNull`.
Validation:
  The assertion verifies that the `cardLast4` method correctly handles a null input by setting the `cardLast4` field to null.
  This test ensures that the method does not throw an exception and properly sets the field to null when a null value is provided.

Scenario 3: Empty Card Last 4 Digits

Details:
  TestName: emptyCardLast4ShouldSetValueToEmpty
  Description: This test verifies that when an empty string is passed to the `cardLast4` method, it sets the `cardLast4` field to an empty string and returns the `CollectionAgencyInvolvementRequest` instance.
Execution:
  Arrange: Create an instance of `CollectionAgencyInvolvementRequest`.
  Act: Call the `cardLast4` method with an empty string.
  Assert: Assert that the `cardLast4` field of the `CollectionAgencyInvolvementRequest` instance is set to an empty string using `assertEquals`.
Validation:
  The assertion verifies that the `cardLast4` method correctly handles an empty string input by setting the `cardLast4` field to an empty string.
  This test ensures that the method does not throw an exception and properly sets the field to an empty string when an empty string is provided.

Scenario 4: Card Last 4 Digits with Special Characters

Details:
  TestName: cardLast4WithSpecialCharactersShouldSetValue
  Description: This test checks that when a string containing special characters is passed to the `cardLast4` method, it sets the `cardLast4` field to the provided value and returns the `CollectionAgencyInvolvementRequest` instance.
Execution:
  Arrange: Create an instance of `CollectionAgencyInvolvementRequest`.
  Act: Call the `cardLast4` method with a string containing special characters (e.g., "!@#$").
  Assert: Assert that the `cardLast4` field of the `CollectionAgencyInvolvementRequest` instance is set to the provided value using `assertEquals`.
Validation:
  The assertion verifies that the `cardLast4` method correctly handles a string with special characters by setting the `cardLast4` field to the provided value.
  This test ensures that the method does not perform any validation or restriction on the input string and allows special characters to be set.

These test scenarios cover different aspects of the `cardLast4` method, including valid input, null input, empty input, and input with special characters. They ensure that the method behaves as expected in various scenarios and properly sets the `cardLast4` field of the `CollectionAgencyInvolvementRequest` instance.
*/

// ********RoostGPT********
package org.openapitools.model;

import static org.junit.jupiter.api.Assertions.assertEquals;
import static org.junit.jupiter.api.Assertions.assertNull;
import org.junit.jupiter.api.Test;
import org.junit.jupiter.params.ParameterizedTest;
import org.junit.jupiter.params.provider.CsvSource;
import org.junit.jupiter.params.provider.NullSource;
import org.junit.jupiter.params.provider.ValueSource;
import java.net.URI;
import java.util.Objects;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonCreator;
import com.fasterxml.jackson.annotation.JsonTypeName;
import org.openapitools.jackson.nullable.JsonNullable;
import java.time.OffsetDateTime;
import javax.validation.Valid;
import javax.validation.constraints.*;
import io.swagger.v3.oas.annotations.media.Schema;
import java.util.*;
import javax.annotation.Generated;

class CollectionAgencyInvolvementRequestCardLast4Test {

	@ParameterizedTest
	@CsvSource({ "1234", "5678", "9012" })
	void validCardLast4ShouldSetValue(String cardLast4) {
		CollectionAgencyInvolvementRequest request = new CollectionAgencyInvolvementRequest();

		CollectionAgencyInvolvementRequest result = request.cardLast4(cardLast4);

		assertEquals(cardLast4, result.getCardLast4());
	}

	@ParameterizedTest
	@NullSource
	void nullCardLast4ShouldSetValueToNull(String cardLast4) {
		CollectionAgencyInvolvementRequest request = new CollectionAgencyInvolvementRequest();

		CollectionAgencyInvolvementRequest result = request.cardLast4(cardLast4);

		assertNull(result.getCardLast4());
	}

	@Test
	void emptyCardLast4ShouldSetValueToEmpty() {
		CollectionAgencyInvolvementRequest request = new CollectionAgencyInvolvementRequest();

		CollectionAgencyInvolvementRequest result = request.cardLast4("");

		assertEquals("", result.getCardLast4());
	}

	@ParameterizedTest
	@ValueSource(strings = { "!@#$", "%^&*", "abcd" })
	void cardLast4WithSpecialCharactersShouldSetValue(String cardLast4) {
		CollectionAgencyInvolvementRequest request = new CollectionAgencyInvolvementRequest();

		CollectionAgencyInvolvementRequest result = request.cardLast4(cardLast4);

		assertEquals(cardLast4, result.getCardLast4());
	}

}