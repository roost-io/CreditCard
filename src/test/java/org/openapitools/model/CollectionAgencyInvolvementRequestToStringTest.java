// ********RoostGPT********
/*
Test generated by RoostGPT for test CreditCard-Unit using AI Type Claude AI and AI Model claude-3-opus-20240229

ROOST_METHOD_HASH=toString_7fab2c71bc
ROOST_METHOD_SIG_HASH=toString_ceffa8036e

Here are the JUnit test scenarios for the provided `toString` method:

Scenario 1: Verify toString output with all fields populated

Details:
  TestName: toStringWithAllFieldsPopulated
  Description: This test verifies that the toString method generates the expected output string when all fields of the CollectionAgencyInvolvementRequest object are populated with non-null values.
Execution:
  Arrange: Create a CollectionAgencyInvolvementRequest object and set values for previousNotifications, responseStatus, and cardLast4 fields.
  Act: Invoke the toString method on the CollectionAgencyInvolvementRequest object.
  Assert: Use JUnit assertions to compare the generated output string with the expected string format and field values.
Validation:
  The assertion verifies that the toString method correctly includes all field names and their corresponding values in the output string.
  This test ensures that the toString method provides a readable and informative representation of the object's state.

Scenario 2: Verify toString output with null fields

Details:
  TestName: toStringWithNullFields
  Description: This test checks how the toString method handles null values for the previousNotifications, responseStatus, and cardLast4 fields.
Execution:
  Arrange: Create a CollectionAgencyInvolvementRequest object with all fields set to null.
  Act: Invoke the toString method on the CollectionAgencyInvolvementRequest object.
  Assert: Use JUnit assertions to verify that the generated output string includes the field names and displays "null" for the corresponding null values.
Validation:
  The assertion confirms that the toString method gracefully handles null field values and includes them in the output string.
  This test ensures that the toString method does not throw any exceptions and provides a consistent representation even when fields are null.

Scenario 3: Verify toString output with empty fields

Details:
  TestName: toStringWithEmptyFields
  Description: This test verifies the behavior of the toString method when the previousNotifications, responseStatus, and cardLast4 fields are empty or have default values.
Execution:
  Arrange: Create a CollectionAgencyInvolvementRequest object with empty or default values for the fields.
  Act: Invoke the toString method on the CollectionAgencyInvolvementRequest object.
  Assert: Use JUnit assertions to check that the generated output string includes the field names and displays appropriate empty or default values.
Validation:
  The assertion ensures that the toString method handles empty or default field values correctly and includes them in the output string.
  This test validates that the toString method provides a meaningful representation even when fields are empty or have default values.

Scenario 4: Verify toString output format

Details:
  TestName: toStringOutputFormat
  Description: This test verifies that the toString method generates the output string in the expected format, including indentation and line breaks.
Execution:
  Arrange: Create a CollectionAgencyInvolvementRequest object with sample values for the fields.
  Act: Invoke the toString method on the CollectionAgencyInvolvementRequest object.
  Assert: Use JUnit assertions to compare the generated output string with the expected format, including indentation and line breaks.
Validation:
  The assertion confirms that the toString method adheres to the specified output format, making the string readable and well-structured.
  This test ensures that the toString method provides a consistent and visually appealing representation of the object's state.

These test scenarios cover different aspects of the `toString` method, including handling of populated fields, null fields, empty fields, and the output format. They aim to ensure that the `toString` method generates the expected output string representation of the `CollectionAgencyInvolvementRequest` object under various conditions.
*/

// ********RoostGPT********
package org.openapitools.model;

import org.junit.jupiter.api.Test;
import static org.junit.jupiter.api.Assertions.*;
import java.net.URI;
import java.util.Objects;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonCreator;
import com.fasterxml.jackson.annotation.JsonTypeName;
import org.openapitools.jackson.nullable.JsonNullable;
import java.time.OffsetDateTime;
import javax.validation.Valid;
import javax.validation.constraints.*;
import io.swagger.v3.oas.annotations.media.Schema;
import java.util.*;
import javax.annotation.Generated;

class CollectionAgencyInvolvementRequestToStringTest {

	@Test
	void toStringWithAllFieldsPopulated() {
		// Arrange
		CollectionAgencyInvolvementRequest request = new CollectionAgencyInvolvementRequest()
			.previousNotifications("Previous Notifications")
			.responseStatus("Response Status")
			.cardLast4("1234");
		// Act
		String result = request.toString();
		// Assert
		String expectedOutput = "class CollectionAgencyInvolvementRequest {\n"
				+ "    previousNotifications: Previous Notifications\n" + "    responseStatus: Response Status\n"
				+ "    cardLast4: 1234\n" + "}";
		assertEquals(expectedOutput, result);
	}

	@Test
	void toStringWithNullFields() {
		// Arrange
		CollectionAgencyInvolvementRequest request = new CollectionAgencyInvolvementRequest();
		// Act
		String result = request.toString();
		// Assert
		String expectedOutput = "class CollectionAgencyInvolvementRequest {\n" + "    previousNotifications: null\n"
				+ "    responseStatus: null\n" + "    cardLast4: null\n" + "}";
		assertEquals(expectedOutput, result);
	}

	@Test
	void toStringWithEmptyFields() {
		// Arrange
		CollectionAgencyInvolvementRequest request = new CollectionAgencyInvolvementRequest().previousNotifications("")
			.responseStatus("")
			.cardLast4("");
		// Act
		String result = request.toString();
		// Assert
		String expectedOutput = "class CollectionAgencyInvolvementRequest {\n" + "    previousNotifications: \n"
				+ "    responseStatus: \n" + "    cardLast4: \n" + "}";
		assertEquals(expectedOutput, result);
	}

	@Test
	void toStringOutputFormat() {
		// Arrange
		CollectionAgencyInvolvementRequest request = new CollectionAgencyInvolvementRequest()
			.previousNotifications("Previous Notifications")
			.responseStatus("Response Status")
			.cardLast4("1234");
		// Act
		String result = request.toString();
		// Assert
		assertTrue(result.startsWith("class CollectionAgencyInvolvementRequest {"));
		assertTrue(result.contains("    previousNotifications: Previous Notifications"));
		assertTrue(result.contains("    responseStatus: Response Status"));
		assertTrue(result.contains("    cardLast4: 1234"));
		assertTrue(result.endsWith("}"));
		assertEquals(5, result.split("\n").length);
	}

}