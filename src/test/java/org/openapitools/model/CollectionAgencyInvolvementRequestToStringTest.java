// ********RoostGPT********
/*
Test generated by RoostGPT for test CreditCard-Unit using AI Type Claude AI and AI Model claude-3-opus-20240229

ROOST_METHOD_HASH=toString_b8e0937446
ROOST_METHOD_SIG_HASH=toString_bbffdadaa2

Here are some JUnit test scenarios for the provided toString() method:

Scenario 1: Test toString() with all fields populated

Details:
  TestName: toStringWithAllFieldsPopulated
  Description: This test verifies that the toString() method correctly generates a string representation of the CollectionAgencyInvolvementRequest object when all fields are populated with non-null values.
Execution:
  Arrange:
    - Create a CollectionAgencyInvolvementRequest object.
    - Set the previousNotifications, responseStatus, and cardLast4 fields to non-null values.
  Act:
    - Invoke the toString() method on the CollectionAgencyInvolvementRequest object.
  Assert:
    - Assert that the returned string contains the expected field names and their corresponding values.
    - Assert that the string follows the expected format with indentation.
Validation:
  The assertion verifies that the toString() method correctly includes all field names and their values in the generated string representation. This test ensures that the method provides a comprehensive string representation of the object when all fields are populated, which is useful for logging, debugging, and displaying object information.

Scenario 2: Test toString() with null fields

Details:
  TestName: toStringWithNullFields
  Description: This test checks that the toString() method handles null field values gracefully and includes them in the generated string representation.
Execution:
  Arrange:
    - Create a CollectionAgencyInvolvementRequest object.
    - Set the previousNotifications, responseStatus, and cardLast4 fields to null.
  Act:
    - Invoke the toString() method on the CollectionAgencyInvolvementRequest object.
  Assert:
    - Assert that the returned string contains the expected field names and "null" for their corresponding values.
    - Assert that the string follows the expected format with indentation.
Validation:
  The assertion verifies that the toString() method handles null field values correctly and includes them in the generated string representation. This test ensures that the method does not throw any exceptions or omit fields when they are null, providing a consistent string representation of the object.

Scenario 3: Test toString() with empty fields

Details:
  TestName: toStringWithEmptyFields
  Description: This test verifies that the toString() method includes empty field values in the generated string representation.
Execution:
  Arrange:
    - Create a CollectionAgencyInvolvementRequest object.
    - Set the previousNotifications, responseStatus, and cardLast4 fields to empty strings.
  Act:
    - Invoke the toString() method on the CollectionAgencyInvolvementRequest object.
  Assert:
    - Assert that the returned string contains the expected field names and empty strings for their corresponding values.
    - Assert that the string follows the expected format with indentation.
Validation:
  The assertion verifies that the toString() method includes empty field values in the generated string representation. This test ensures that the method does not omit or treat empty fields differently, providing a consistent string representation of the object.

Scenario 4: Test toString() with special characters in field values

Details:
  TestName: toStringWithSpecialCharactersInFields
  Description: This test checks that the toString() method handles special characters in field values correctly and includes them in the generated string representation.
Execution:
  Arrange:
    - Create a CollectionAgencyInvolvementRequest object.
    - Set the previousNotifications, responseStatus, and cardLast4 fields to values containing special characters (e.g., "Special@#$%").
  Act:
    - Invoke the toString() method on the CollectionAgencyInvolvementRequest object.
  Assert:
    - Assert that the returned string contains the expected field names and their corresponding values with special characters.
    - Assert that the string follows the expected format with indentation.
Validation:
  The assertion verifies that the toString() method handles special characters in field values correctly and includes them in the generated string representation without any formatting issues. This test ensures that the method can handle various types of input and provides an accurate string representation of the object.

These test scenarios cover different aspects of the toString() method, including handling populated fields, null fields, empty fields, and special characters in field values. They ensure that the method generates a consistent and accurate string representation of the CollectionAgencyInvolvementRequest object under various conditions.
*/

// ********RoostGPT********
package org.openapitools.model;

import org.junit.jupiter.api.Test;
import org.junit.jupiter.params.ParameterizedTest;
import org.junit.jupiter.params.provider.Arguments;
import org.junit.jupiter.params.provider.MethodSource;
import java.util.stream.Stream;
import static org.junit.jupiter.api.Assertions.assertEquals;
import java.net.URI;
import java.util.Objects;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonCreator;
import com.fasterxml.jackson.annotation.JsonTypeName;
import org.openapitools.jackson.nullable.JsonNullable;
import java.time.OffsetDateTime;
import javax.validation.Valid;
import javax.validation.constraints.*;
import io.swagger.v3.oas.annotations.media.Schema;
import java.util.*;
import javax.annotation.Generated;

class CollectionAgencyInvolvementRequestToStringTest {

	@Test
	void toStringWithAllFieldsPopulated() {
		// Arrange
		CollectionAgencyInvolvementRequest request = new CollectionAgencyInvolvementRequest();
		request.setPreviousNotifications("Previous Notifications");
		request.setResponseStatus("Response Status");
		request.setCardLast4("1234");
		// Act
		String result = request.toString();
		// Assert
		String expected = "class CollectionAgencyInvolvementRequest {\n"
				+ "    previousNotifications: Previous Notifications\n" + "    responseStatus: Response Status\n"
				+ "    cardLast4: 1234\n" + "}";
		assertEquals(expected, result);
	}

	@Test
	void toStringWithNullFields() {
		// Arrange
		CollectionAgencyInvolvementRequest request = new CollectionAgencyInvolvementRequest();
		// Act
		String result = request.toString();
		// Assert
		String expected = "class CollectionAgencyInvolvementRequest {\n" + "    previousNotifications: null\n"
				+ "    responseStatus: null\n" + "    cardLast4: null\n" + "}";
		assertEquals(expected, result);
	}

	@Test
	void toStringWithEmptyFields() {
		// Arrange
		CollectionAgencyInvolvementRequest request = new CollectionAgencyInvolvementRequest();
		request.setPreviousNotifications("");
		request.setResponseStatus("");
		request.setCardLast4("");
		// Act
		String result = request.toString();
		// Assert
		String expected = "class CollectionAgencyInvolvementRequest {\n" + "    previousNotifications: \n"
				+ "    responseStatus: \n" + "    cardLast4: \n" + "}";
		assertEquals(expected, result);
	}

	@ParameterizedTest
	@MethodSource("provideSpecialCharactersData")
	void toStringWithSpecialCharactersInFields(String previousNotifications, String responseStatus, String cardLast4,
			String expected) {
		// Arrange
		CollectionAgencyInvolvementRequest request = new CollectionAgencyInvolvementRequest();
		request.setPreviousNotifications(previousNotifications);
		request.setResponseStatus(responseStatus);
		request.setCardLast4(cardLast4);
		// Act
		String result = request.toString();
		// Assert
		assertEquals(expected, result);
	}

	private static Stream<Arguments> provideSpecialCharactersData() {
		return Stream.of(
				Arguments.of("Special@#$%", "Special@#$%", "Special@#$%",
						"class CollectionAgencyInvolvementRequest {\n" + "    previousNotifications: Special@#$%\n"
								+ "    responseStatus: Special@#$%\n" + "    cardLast4: Special@#$%\n" + "}"),
				Arguments.of("!@#$%^&*()", "!@#$%^&*()", "!@#$%^&*()",
						"class CollectionAgencyInvolvementRequest {\n" + "    previousNotifications: !@#$%^&*()\n"
								+ "    responseStatus: !@#$%^&*()\n" + "    cardLast4: !@#$%^&*()\n" + "}"));
	}

}