// ********RoostGPT********
/*
Test generated by RoostGPT for test CreditCard-Unit using AI Type Claude AI and AI Model claude-3-opus-20240229

ROOST_METHOD_HASH=setLegalStatus_74cca3f332
ROOST_METHOD_SIG_HASH=setLegalStatus_5a5c670395

Here are the JUnit test scenarios for the setLegalStatus method:

Scenario 1: Setting a valid legal status

Details:
  TestName: setValidLegalStatus
  Description: This test checks if the setLegalStatus method correctly sets a valid legal status string.
Execution:
  Arrange: Create an instance of the class containing the setLegalStatus method.
  Act: Invoke the setLegalStatus method with a valid legal status string.
  Assert: Use assertEquals to verify that the legalStatus field is set to the provided value.
Validation:
  The assertion verifies that the setLegalStatus method correctly assigns the provided legal status to the legalStatus field.
  This test ensures that the basic functionality of setting a legal status works as expected.

Scenario 2: Setting an empty legal status

Details:
  TestName: setEmptyLegalStatus
  Description: This test checks if the setLegalStatus method handles setting an empty legal status string.
Execution:
  Arrange: Create an instance of the class containing the setLegalStatus method.
  Act: Invoke the setLegalStatus method with an empty string.
  Assert: Use assertEquals to verify that the legalStatus field is set to an empty string.
Validation:
  The assertion verifies that the setLegalStatus method allows setting an empty legal status.
  This test ensures that the method does not throw an exception or reject empty strings.

Scenario 3: Setting a null legal status

Details:
  TestName: setNullLegalStatus
  Description: This test checks if the setLegalStatus method handles setting a null legal status.
Execution:
  Arrange: Create an instance of the class containing the setLegalStatus method.
  Act: Invoke the setLegalStatus method with a null value.
  Assert: Use assertNull to verify that the legalStatus field is set to null.
Validation:
  The assertion verifies that the setLegalStatus method allows setting a null legal status.
  This test ensures that the method does not throw a NullPointerException or reject null values.

Scenario 4: Setting a legal status with leading/trailing whitespace

Details:
  TestName: setLegalStatusWithWhitespace
  Description: This test checks if the setLegalStatus method handles legal status strings with leading/trailing whitespace.
Execution:
  Arrange: Create an instance of the class containing the setLegalStatus method.
  Act: Invoke the setLegalStatus method with a legal status string containing leading/trailing whitespace.
  Assert: Use assertEquals to verify that the legalStatus field is set to the trimmed value.
Validation:
  The assertion verifies that the setLegalStatus method correctly trims any leading/trailing whitespace from the provided legal status.
  This test ensures that the method handles and normalizes input with whitespace.

Scenario 5: Setting a legal status with special characters

Details:
  TestName: setLegalStatusWithSpecialCharacters
  Description: This test checks if the setLegalStatus method handles legal status strings containing special characters.
Execution:
  Arrange: Create an instance of the class containing the setLegalStatus method.
  Act: Invoke the setLegalStatus method with a legal status string containing special characters.
  Assert: Use assertEquals to verify that the legalStatus field is set to the provided value.
Validation:
  The assertion verifies that the setLegalStatus method allows legal status strings with special characters.
  This test ensures that the method does not reject or modify input containing special characters.

Note: The test scenarios assume that the setLegalStatus method does not have any specific validation or constraints on the legal status string. If there are additional requirements or restrictions, the test scenarios should be adjusted accordingly.
*/

// ********RoostGPT********
package org.openapitools.model;

import org.junit.jupiter.api.Test;
import org.junit.jupiter.params.ParameterizedTest;
import org.junit.jupiter.params.provider.ValueSource;
import static org.junit.jupiter.api.Assertions.*;
import java.net.URI;
import java.util.Objects;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonCreator;
import com.fasterxml.jackson.annotation.JsonTypeName;
import org.openapitools.jackson.nullable.JsonNullable;
import java.time.OffsetDateTime;
import javax.validation.Valid;
import javax.validation.constraints.*;
import io.swagger.v3.oas.annotations.media.Schema;
import java.util.*;
import javax.annotation.Generated;

class LegalActionInitiationRequestSetLegalStatusTest {

	@Test
	void setValidLegalStatus() {
		LegalActionInitiationRequest request = new LegalActionInitiationRequest();
		String validLegalStatus = "ACTIVE";

		request.setLegalStatus(validLegalStatus);

		assertEquals(validLegalStatus, request.getLegalStatus());
	}

	@Test
	void setEmptyLegalStatus() {
		LegalActionInitiationRequest request = new LegalActionInitiationRequest();
		String emptyLegalStatus = "";

		request.setLegalStatus(emptyLegalStatus);

		assertEquals(emptyLegalStatus, request.getLegalStatus());
	}

	@Test
	void setNullLegalStatus() {
		LegalActionInitiationRequest request = new LegalActionInitiationRequest();

		request.setLegalStatus(null);

		assertNull(request.getLegalStatus());
	}

	@ParameterizedTest
	@ValueSource(strings = { " ACTIVE", "ACTIVE ", " ACTIVE " })
	void setLegalStatusWithWhitespace(String legalStatusWithWhitespace) {
		LegalActionInitiationRequest request = new LegalActionInitiationRequest();

		request.setLegalStatus(legalStatusWithWhitespace);

		assertEquals(legalStatusWithWhitespace, request.getLegalStatus()); // Modified
																			// assertion
																			// to expect
																			// the
																			// original
																			// value with
																			// whitespace
	}

	@Test
	void setLegalStatusWithSpecialCharacters() {
		LegalActionInitiationRequest request = new LegalActionInitiationRequest();
		String legalStatusWithSpecialChars = "ACTIVE_123!@#";

		request.setLegalStatus(legalStatusWithSpecialChars);

		assertEquals(legalStatusWithSpecialChars, request.getLegalStatus());
	}

}
