// ********RoostGPT********
/*
Test generated by RoostGPT for test CreditCard-Unit using AI Type Claude AI and AI Model claude-3-opus-20240229

ROOST_METHOD_HASH=setCardLast4_1ec3bfb1aa
ROOST_METHOD_SIG_HASH=setCardLast4_67db513785

Here are some JUnit test scenarios for the setCardLast4 method:

Scenario 1: Valid Card Last 4 Digits

Details:
  TestName: validCardLast4ShouldSetValue
  Description: This test verifies that the setCardLast4 method correctly sets the value of cardLast4 when provided with a valid input.
Execution:
  Arrange: Create an instance of the class containing the setCardLast4 method.
  Act: Invoke the setCardLast4 method with a valid string representing the last 4 digits of a card number.
  Assert: Use assertEquals to verify that the cardLast4 field of the object is set to the provided value.
Validation:
  The assertion ensures that the setCardLast4 method properly assigns the provided value to the cardLast4 field.
  This test is important to validate that the setter method functions as expected for valid inputs.

Scenario 2: Null Card Last 4 Digits

Details:
  TestName: nullCardLast4ShouldSetNull
  Description: This test checks that the setCardLast4 method sets the cardLast4 field to null when provided with a null input.
Execution:
  Arrange: Create an instance of the class containing the setCardLast4 method.
  Act: Invoke the setCardLast4 method with a null value.
  Assert: Use assertNull to verify that the cardLast4 field of the object is set to null.
Validation:
  The assertion confirms that the setCardLast4 method handles null inputs by setting the cardLast4 field to null.
  This test ensures that the method does not throw an exception or assign an invalid value when given a null input.

Scenario 3: Empty Card Last 4 Digits

Details:
  TestName: emptyCardLast4ShouldSetEmptyString
  Description: This test verifies that the setCardLast4 method sets the cardLast4 field to an empty string when provided with an empty string input.
Execution:
  Arrange: Create an instance of the class containing the setCardLast4 method.
  Act: Invoke the setCardLast4 method with an empty string.
  Assert: Use assertEquals to verify that the cardLast4 field of the object is set to an empty string.
Validation:
  The assertion ensures that the setCardLast4 method correctly handles empty string inputs by setting the cardLast4 field to an empty string.
  This test validates that the method does not throw an exception or assign an invalid value when given an empty string.

Scenario 4: Card Last 4 Digits with Leading Zeros

Details:
  TestName: cardLast4WithLeadingZerosShouldSetValue
  Description: This test checks that the setCardLast4 method correctly sets the value of cardLast4 when provided with a string containing leading zeros.
Execution:
  Arrange: Create an instance of the class containing the setCardLast4 method.
  Act: Invoke the setCardLast4 method with a string representing the last 4 digits of a card number, including leading zeros (e.g., "0012").
  Assert: Use assertEquals to verify that the cardLast4 field of the object is set to the provided value.
Validation:
  The assertion confirms that the setCardLast4 method properly handles inputs with leading zeros and assigns the provided value to the cardLast4 field.
  This test ensures that the method correctly stores the last 4 digits of a card number, even when they include leading zeros.

These test scenarios cover different aspects of the setCardLast4 method, including valid inputs, null inputs, empty string inputs, and inputs with leading zeros. They ensure that the method behaves as expected in various scenarios and handles different types of inputs correctly.
*/

// ********RoostGPT********
package org.openapitools.model;

import org.junit.jupiter.api.Test;
import org.junit.jupiter.params.ParameterizedTest;
import org.junit.jupiter.params.provider.CsvSource;
import org.junit.jupiter.params.provider.NullSource;
import org.junit.jupiter.params.provider.ValueSource;
import static org.junit.jupiter.api.Assertions.*;
import java.net.URI;
import java.util.Objects;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonCreator;
import com.fasterxml.jackson.annotation.JsonTypeName;
import java.time.LocalDate;
import org.springframework.format.annotation.DateTimeFormat;
import org.openapitools.jackson.nullable.JsonNullable;
import java.time.OffsetDateTime;
import javax.validation.Valid;
import javax.validation.constraints.*;
import io.swagger.v3.oas.annotations.media.Schema;
import java.util.*;
import javax.annotation.Generated;

class BalanceAlertRequestSetCardLast4Test {

	@Test
	void validCardLast4ShouldSetValue() {
		// Arrange
		BalanceAlertRequest balanceAlertRequest = new BalanceAlertRequest();
		String validCardLast4 = "1234";
		// Act
		balanceAlertRequest.setCardLast4(validCardLast4);
		// Assert
		assertEquals(validCardLast4, balanceAlertRequest.getCardLast4());
	}

	@ParameterizedTest
	@NullSource
	void nullCardLast4ShouldSetNull(String nullCardLast4) {
		// Arrange
		BalanceAlertRequest balanceAlertRequest = new BalanceAlertRequest();
		// Act
		balanceAlertRequest.setCardLast4(nullCardLast4);
		// Assert
		assertNull(balanceAlertRequest.getCardLast4());
	}

	@ParameterizedTest
	@ValueSource(strings = { "", " " })
	void emptyCardLast4ShouldSetEmptyString(String emptyCardLast4) {
		// Arrange
		BalanceAlertRequest balanceAlertRequest = new BalanceAlertRequest();
		// Act
		balanceAlertRequest.setCardLast4(emptyCardLast4);
		// Assert
		assertEquals(emptyCardLast4, balanceAlertRequest.getCardLast4());
	}

	@ParameterizedTest
	@CsvSource({ "0012", "0000" })
	void cardLast4WithLeadingZerosShouldSetValue(String cardLast4WithLeadingZeros) {
		// Arrange
		BalanceAlertRequest balanceAlertRequest = new BalanceAlertRequest();
		// Act
		balanceAlertRequest.setCardLast4(cardLast4WithLeadingZeros);
		// Assert
		assertEquals(cardLast4WithLeadingZeros, balanceAlertRequest.getCardLast4());
	}

}