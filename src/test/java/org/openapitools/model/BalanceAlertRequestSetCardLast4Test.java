// ********RoostGPT********
/*
Test generated by RoostGPT for test CreditCard-Unit using AI Type Claude AI and AI Model claude-3-opus-20240229

ROOST_METHOD_HASH=setCardLast4_1ec3bfb1aa
ROOST_METHOD_SIG_HASH=setCardLast4_67db513785

Here are the JUnit test scenarios for the setCardLast4 method:

Scenario 1: Valid Card Last 4 Digits

Details:
  TestName: setCardLast4WithValidInput
  Description: This test verifies that the setCardLast4 method correctly sets the cardLast4 field when provided with a valid input string containing the last 4 digits of a card number.
Execution:
  Arrange: Create an instance of the class containing the setCardLast4 method.
  Act: Invoke the setCardLast4 method with a valid input string (e.g., "1234").
  Assert: Use assertEquals to verify that the cardLast4 field of the class instance is equal to the input string.
Validation:
  The assertion ensures that the setCardLast4 method correctly assigns the provided value to the cardLast4 field.
  This test is important to validate that the method behaves as expected when given a valid input, ensuring the integrity of the card last 4 digits data.

Scenario 2: Null Card Last 4 Digits

Details:
  TestName: setCardLast4WithNullInput
  Description: This test verifies that the setCardLast4 method handles a null input string gracefully and sets the cardLast4 field to null.
Execution:
  Arrange: Create an instance of the class containing the setCardLast4 method.
  Act: Invoke the setCardLast4 method with a null input string.
  Assert: Use assertNull to verify that the cardLast4 field of the class instance is set to null.
Validation:
  The assertion ensures that the setCardLast4 method correctly handles a null input and sets the cardLast4 field to null.
  This test is important to validate that the method does not throw any exceptions or exhibit unexpected behavior when provided with a null input.

Scenario 3: Empty Card Last 4 Digits

Details:
  TestName: setCardLast4WithEmptyInput
  Description: This test verifies that the setCardLast4 method handles an empty input string and sets the cardLast4 field to an empty string.
Execution:
  Arrange: Create an instance of the class containing the setCardLast4 method.
  Act: Invoke the setCardLast4 method with an empty input string ("").
  Assert: Use assertEquals to verify that the cardLast4 field of the class instance is equal to an empty string.
Validation:
  The assertion ensures that the setCardLast4 method correctly handles an empty input string and sets the cardLast4 field to an empty string.
  This test is important to validate that the method does not throw any exceptions or exhibit unexpected behavior when provided with an empty input string.

Scenario 4: Card Last 4 Digits with Whitespace

Details:
  TestName: setCardLast4WithWhitespaceInput
  Description: This test verifies that the setCardLast4 method handles an input string containing whitespace characters and sets the cardLast4 field correctly.
Execution:
  Arrange: Create an instance of the class containing the setCardLast4 method.
  Act: Invoke the setCardLast4 method with an input string containing whitespace characters (e.g., " 1234 ").
  Assert: Use assertEquals to verify that the cardLast4 field of the class instance is equal to the input string with whitespace characters.
Validation:
  The assertion ensures that the setCardLast4 method correctly handles an input string with whitespace characters and sets the cardLast4 field accordingly.
  This test is important to validate that the method does not perform any trimming or modification of the input string and preserves the whitespace characters.

These test scenarios cover various cases, including valid input, null input, empty input, and input with whitespace characters. They ensure that the setCardLast4 method behaves as expected in different scenarios and handles edge cases appropriately.
*/

// ********RoostGPT********
package org.openapitools.model;

import org.junit.jupiter.api.Test;
import org.junit.jupiter.params.ParameterizedTest;
import org.junit.jupiter.params.provider.CsvSource;
import org.junit.jupiter.params.provider.NullSource;
import org.junit.jupiter.params.provider.ValueSource;
import static org.junit.jupiter.api.Assertions.*;
import java.net.URI;
import java.util.Objects;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonCreator;
import com.fasterxml.jackson.annotation.JsonTypeName;
import java.time.LocalDate;
import org.springframework.format.annotation.DateTimeFormat;
import org.openapitools.jackson.nullable.JsonNullable;
import java.time.OffsetDateTime;
import javax.validation.Valid;
import javax.validation.constraints.*;
import io.swagger.v3.oas.annotations.media.Schema;
import java.util.*;
import javax.annotation.Generated;

class BalanceAlertRequestSetCardLast4Test {

	@ParameterizedTest
	@CsvSource({ "1234", "5678", "9012", "3456" })
	void setCardLast4WithValidInput(String cardLast4) {
		BalanceAlertRequest request = new BalanceAlertRequest();
		request.setCardLast4(cardLast4);
		assertEquals(cardLast4, request.getCardLast4());
	}

	@Test
	void setCardLast4WithNullInput() {
		BalanceAlertRequest request = new BalanceAlertRequest();
		request.setCardLast4(null);
		assertNull(request.getCardLast4());
	}

	@Test
	void setCardLast4WithEmptyInput() {
		BalanceAlertRequest request = new BalanceAlertRequest();
		request.setCardLast4("");
		assertEquals("", request.getCardLast4());
	}

	@ParameterizedTest
	@ValueSource(strings = { " 1234 ", "  5678  ", "\t9012\t", "\n3456\n" })
	void setCardLast4WithWhitespaceInput(String cardLast4) {
		BalanceAlertRequest request = new BalanceAlertRequest();
		request.setCardLast4(cardLast4);
		assertEquals(cardLast4, request.getCardLast4());
	}

}