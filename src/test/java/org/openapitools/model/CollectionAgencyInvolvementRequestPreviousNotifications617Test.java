// ********RoostGPT********
/*
Test generated by RoostGPT for test CreditCard-Unit using AI Type Claude AI and AI Model claude-3-opus-20240229

ROOST_METHOD_HASH=previousNotifications_d8c110299f
ROOST_METHOD_SIG_HASH=previousNotifications_7faeaa91ab

Here are the JUnit test scenarios for the `previousNotifications` method:

Scenario 1: Set Previous Notifications

Details:
  TestName: setPreviousNotifications_ReturnsSameInstance.
  Description: This test verifies that the `previousNotifications` method sets the `previousNotifications` field correctly and returns the same instance of the `CollectionAgencyInvolvementRequest` object.
Execution:
  Arrange: Create an instance of `CollectionAgencyInvolvementRequest`.
  Act: Invoke the `previousNotifications` method with a valid string value.
  Assert: Assert that the returned object is the same instance as the original `CollectionAgencyInvolvementRequest` object. Also, assert that the `previousNotifications` field is set to the provided value.
Validation:
  The assertion ensures that the `previousNotifications` method correctly sets the `previousNotifications` field and follows the fluent builder pattern by returning the same instance. This test is important to validate the proper behavior of the setter method and the consistency of the object state.

Scenario 2: Set Previous Notifications to Null

Details:
  TestName: setPreviousNotificationsToNull_ReturnsSameInstance.
  Description: This test verifies that the `previousNotifications` method handles setting the `previousNotifications` field to null and returns the same instance of the `CollectionAgencyInvolvementRequest` object.
Execution:
  Arrange: Create an instance of `CollectionAgencyInvolvementRequest`.
  Act: Invoke the `previousNotifications` method with a null value.
  Assert: Assert that the returned object is the same instance as the original `CollectionAgencyInvolvementRequest` object. Also, assert that the `previousNotifications` field is set to null.
Validation:
  The assertion ensures that the `previousNotifications` method correctly handles setting the `previousNotifications` field to null and follows the fluent builder pattern by returning the same instance. This test is important to validate the proper behavior of the setter method when dealing with null values and the consistency of the object state.

Scenario 3: Set Previous Notifications to Empty String

Details:
  TestName: setPreviousNotificationsToEmptyString_ReturnsSameInstance.
  Description: This test verifies that the `previousNotifications` method handles setting the `previousNotifications` field to an empty string and returns the same instance of the `CollectionAgencyInvolvementRequest` object.
Execution:
  Arrange: Create an instance of `CollectionAgencyInvolvementRequest`.
  Act: Invoke the `previousNotifications` method with an empty string value.
  Assert: Assert that the returned object is the same instance as the original `CollectionAgencyInvolvementRequest` object. Also, assert that the `previousNotifications` field is set to an empty string.
Validation:
  The assertion ensures that the `previousNotifications` method correctly handles setting the `previousNotifications` field to an empty string and follows the fluent builder pattern by returning the same instance. This test is important to validate the proper behavior of the setter method when dealing with empty string values and the consistency of the object state.

These test scenarios cover the basic functionality of the `previousNotifications` method, including setting valid values, null values, and empty strings. They ensure that the method behaves as expected and maintains the consistency of the `CollectionAgencyInvolvementRequest` object.
*/

// ********RoostGPT********
package org.openapitools.model;
import org.junit.jupiter.api.Test;
import org.junit.jupiter.api.DisplayName;
import static org.junit.jupiter.api.Assertions.*;
import java.net.URI;
import java.util.Objects;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonCreator;
import com.fasterxml.jackson.annotation.JsonTypeName;
import org.openapitools.jackson.nullable.JsonNullable;
import java.time.OffsetDateTime;
import javax.validation.Valid;
import javax.validation.constraints.*;
import io.swagger.v3.oas.annotations.media.Schema;
import java.util.*;
import javax.annotation.Generated;

class CollectionAgencyInvolvementRequestPreviousNotifications617Test {
    @Test
    @DisplayName("Set Previous Notifications - Returns Same Instance")
    void setPreviousNotifications_ReturnsSameInstance() {
        // Arrange
        CollectionAgencyInvolvementRequest request = new CollectionAgencyInvolvementRequest();
        String previousNotifications = "Some notifications";
        // Act
        CollectionAgencyInvolvementRequest result = request.previousNotifications(previousNotifications);
        // Assert
        assertSame(request, result);
        assertEquals(previousNotifications, request.getPreviousNotifications());
    }
    @Test
    @DisplayName("Set Previous Notifications to Null - Returns Same Instance")
    void setPreviousNotificationsToNull_ReturnsSameInstance() {
        // Arrange
        CollectionAgencyInvolvementRequest request = new CollectionAgencyInvolvementRequest();
        // Act
        CollectionAgencyInvolvementRequest result = request.previousNotifications(null);
        // Assert
        assertSame(request, result);
        assertNull(request.getPreviousNotifications());
    }
    @Test
    @DisplayName("Set Previous Notifications to Empty String - Returns Same Instance")
    void setPreviousNotificationsToEmptyString_ReturnsSameInstance() {
        // Arrange
        CollectionAgencyInvolvementRequest request = new CollectionAgencyInvolvementRequest();
        String previousNotifications = "";
        // Act
        CollectionAgencyInvolvementRequest result = request.previousNotifications(previousNotifications);
        // Assert
        assertSame(request, result);
        assertEquals(previousNotifications, request.getPreviousNotifications());
    }
}