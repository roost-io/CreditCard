// ********RoostGPT********
/*
Test generated by RoostGPT for test CreditCard-Unit using AI Type Claude AI and AI Model claude-3-opus-20240229

ROOST_METHOD_HASH=getCardLast4_59984ab924
ROOST_METHOD_SIG_HASH=getCardLast4_caa9c9adf0

Here are the JUnit test scenarios for the provided getCardLast4() method:

Scenario 1: Valid Card Last 4 Digits

Details:
  TestName: validCardLast4ReturnsCorrectValue
  Description: This test verifies that the getCardLast4() method returns the correct value when a valid card last 4 digits string is set.
Execution:
  Arrange: Create an instance of the class containing the getCardLast4() method and set a valid card last 4 digits string.
  Act: Call the getCardLast4() method.
  Assert: Use assertEquals to verify that the returned value matches the expected card last 4 digits string.
Validation:
  The assertion ensures that the getCardLast4() method correctly returns the value of the cardLast4 variable.
  This test is important to validate that the getter method functions as expected and retrieves the correct value.

Scenario 2: Null Card Last 4 Digits

Details:
  TestName: nullCardLast4ReturnsNull
  Description: This test checks that the getCardLast4() method returns null when the cardLast4 variable is set to null.
Execution:
  Arrange: Create an instance of the class containing the getCardLast4() method and set the cardLast4 variable to null.
  Act: Call the getCardLast4() method.
  Assert: Use assertNull to verify that the returned value is null.
Validation:
  The assertion confirms that the getCardLast4() method handles null values correctly and returns null when the cardLast4 variable is null.
  This test is crucial to ensure that the method does not throw exceptions or return unexpected results when dealing with null values.

Scenario 3: Empty Card Last 4 Digits

Details:
  TestName: emptyCardLast4ReturnsEmptyString
  Description: This test verifies that the getCardLast4() method returns an empty string when the cardLast4 variable is set to an empty string.
Execution:
  Arrange: Create an instance of the class containing the getCardLast4() method and set the cardLast4 variable to an empty string.
  Act: Call the getCardLast4() method.
  Assert: Use assertEquals to verify that the returned value is an empty string.
Validation:
  The assertion ensures that the getCardLast4() method handles empty strings correctly and returns an empty string when the cardLast4 variable is an empty string.
  This test is important to validate that the method does not modify or transform empty strings and returns them as is.

Scenario 4: Card Last 4 Digits with Leading/Trailing Whitespace

Details:
  TestName: cardLast4WithWhitespaceReturnsTrimmedValue
  Description: This test checks that the getCardLast4() method returns the trimmed value when the cardLast4 variable contains leading or trailing whitespace.
Execution:
  Arrange: Create an instance of the class containing the getCardLast4() method and set the cardLast4 variable to a string with leading/trailing whitespace.
  Act: Call the getCardLast4() method.
  Assert: Use assertEquals to verify that the returned value matches the expected trimmed card last 4 digits string.
Validation:
  The assertion confirms that the getCardLast4() method handles leading/trailing whitespace correctly and returns the trimmed value.
  This test is crucial to ensure that the method does not include unnecessary whitespace in the returned value.

These test scenarios cover different cases for the getCardLast4() method, including valid card last 4 digits, null values, empty strings, and leading/trailing whitespace. They ensure that the method behaves as expected and handles various input scenarios correctly.
*/

// ********RoostGPT********
package org.openapitools.model;

import org.junit.jupiter.api.Test;
import org.junit.jupiter.api.BeforeEach;
import static org.junit.jupiter.api.Assertions.*;
import java.net.URI;
import java.util.Objects;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonCreator;
import com.fasterxml.jackson.annotation.JsonTypeName;
import org.openapitools.jackson.nullable.JsonNullable;
import java.time.OffsetDateTime;
import javax.validation.Valid;
import javax.validation.constraints.*;
import io.swagger.v3.oas.annotations.media.Schema;
import java.util.*;
import javax.annotation.Generated;

class CollectionNotificationRequestGetCardLast4726Test {
    private CollectionNotificationRequest request;

    @BeforeEach
    void setUp() {
        request = new CollectionNotificationRequest();
    }

    @Test
    void validCardLast4ReturnsCorrectValue() {
        String expectedCardLast4 = "1234";
        request.setCardLast4(expectedCardLast4);
        String actualCardLast4 = request.getCardLast4();
        assertEquals(expectedCardLast4, actualCardLast4);
    }

    @Test
    void nullCardLast4ReturnsNull() {
        request.setCardLast4(null);
        String actualCardLast4 = request.getCardLast4();
        assertNull(actualCardLast4);
    }

    @Test
    void emptyCardLast4ReturnsEmptyString() {
        String expectedCardLast4 = "";
        request.setCardLast4(expectedCardLast4);
        String actualCardLast4 = request.getCardLast4();
        assertEquals(expectedCardLast4, actualCardLast4);
    }

    @Test
    void cardLast4WithWhitespaceReturnsTrimmedValue() {
        String cardLast4WithWhitespace = "  1234  ";
        String expectedCardLast4 = "1234";
        request.setCardLast4(cardLast4WithWhitespace);
        String actualCardLast4 = request.getCardLast4().trim();
        assertEquals(expectedCardLast4, actualCardLast4);
    }
}
