// ********RoostGPT********
/*
Test generated by RoostGPT for test CreditCard-Unit using AI Type Claude AI and AI Model claude-3-opus-20240229

ROOST_METHOD_HASH=getNonPaymentStatus_80b241095a
ROOST_METHOD_SIG_HASH=getNonPaymentStatus_5823c4c6b2

Based on the provided method `getNonPaymentStatus()` and the given instructions, here are the generated test scenarios:

Scenario 1: Verify NonPaymentStatus Retrieval

Details:
  TestName: nonPaymentStatusRetrieval()
  Description: This test verifies that the `getNonPaymentStatus()` method correctly retrieves the value of the `nonPaymentStatus` variable.
Execution:
  Arrange: Create an instance of the class containing the `getNonPaymentStatus()` method and set the `nonPaymentStatus` variable to a known value.
  Act: Invoke the `getNonPaymentStatus()` method on the created instance.
  Assert: Use JUnit's `assertEquals()` to compare the retrieved value with the expected value of `nonPaymentStatus`.
Validation:
  The assertion verifies that the `getNonPaymentStatus()` method returns the correct value of `nonPaymentStatus`, ensuring that the getter method is functioning as expected.
  This test is important to validate that the `nonPaymentStatus` variable can be accessed correctly through the getter method, maintaining encapsulation and providing a reliable way to retrieve the value.

Scenario 2: Verify NonPaymentStatus Default Value

Details:
  TestName: nonPaymentStatusDefaultValue()
  Description: This test verifies that the `getNonPaymentStatus()` method returns the default value of `nonPaymentStatus` when it is not explicitly set.
Execution:
  Arrange: Create an instance of the class containing the `getNonPaymentStatus()` method without setting the `nonPaymentStatus` variable.
  Act: Invoke the `getNonPaymentStatus()` method on the created instance.
  Assert: Use JUnit's `assertNull()` or `assertEquals()` (depending on the default value) to check if the retrieved value matches the expected default value.
Validation:
  The assertion verifies that the `getNonPaymentStatus()` method returns the correct default value when `nonPaymentStatus` is not explicitly set.
  This test ensures that the `nonPaymentStatus` variable is properly initialized with the expected default value and that the getter method handles the default case correctly.

Scenario 3: Verify NonPaymentStatus Null Value

Details:
  TestName: nonPaymentStatusNullValue()
  Description: This test verifies that the `getNonPaymentStatus()` method handles the case when `nonPaymentStatus` is set to null.
Execution:
  Arrange: Create an instance of the class containing the `getNonPaymentStatus()` method and explicitly set the `nonPaymentStatus` variable to null.
  Act: Invoke the `getNonPaymentStatus()` method on the created instance.
  Assert: Use JUnit's `assertNull()` to check if the retrieved value is null.
Validation:
  The assertion verifies that the `getNonPaymentStatus()` method returns null when `nonPaymentStatus` is explicitly set to null.
  This test ensures that the getter method handles the case of a null value correctly and does not throw any unexpected exceptions.

Note: The provided method `getNonPaymentStatus()` is a simple getter method without any complex logic or dependencies on other methods or classes. Therefore, the test scenarios focus on verifying the basic functionality of retrieving the value of `nonPaymentStatus` under different conditions.
*/

// ********RoostGPT********
package org.openapitools.model;
import org.junit.jupiter.api.BeforeEach;
import org.junit.jupiter.api.Test;
import org.junit.jupiter.params.ParameterizedTest;
import org.junit.jupiter.params.provider.CsvSource;
import static org.junit.jupiter.api.Assertions.*;
import java.net.URI;
import java.util.Objects;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonCreator;
import com.fasterxml.jackson.annotation.JsonTypeName;
import org.openapitools.jackson.nullable.JsonNullable;
import java.time.OffsetDateTime;
import javax.validation.Valid;
import javax.validation.constraints.*;
import io.swagger.v3.oas.annotations.media.Schema;
import java.util.*;
import javax.annotation.Generated;

class LegalActionInitiationRequestGetNonPaymentStatusTest {
    private LegalActionInitiationRequest legalActionInitiationRequest;
    @BeforeEach
    void setUp() {
        legalActionInitiationRequest = new LegalActionInitiationRequest();
    }
    @Test
    void nonPaymentStatusRetrieval() {
        // Arrange
        String expectedNonPaymentStatus = "PENDING";
        legalActionInitiationRequest.setNonPaymentStatus(expectedNonPaymentStatus);
        // Act
        String actualNonPaymentStatus = legalActionInitiationRequest.getNonPaymentStatus();
        // Assert
        assertEquals(expectedNonPaymentStatus, actualNonPaymentStatus);
    }
    @Test
    void nonPaymentStatusDefaultValue() {
        // Act
        String actualNonPaymentStatus = legalActionInitiationRequest.getNonPaymentStatus();
        // Assert
        assertNull(actualNonPaymentStatus);
    }
    @Test
    void nonPaymentStatusNullValue() {
        // Arrange
        legalActionInitiationRequest.setNonPaymentStatus(null);
        // Act
        String actualNonPaymentStatus = legalActionInitiationRequest.getNonPaymentStatus();
        // Assert
        assertNull(actualNonPaymentStatus);
    }
    @ParameterizedTest
    @CsvSource({
            "PENDING",
            "APPROVED",
            "REJECTED"
    })
    void nonPaymentStatusParameterizedTest(String nonPaymentStatus) {
        // Arrange
        legalActionInitiationRequest.setNonPaymentStatus(nonPaymentStatus);
        // Act
        String actualNonPaymentStatus = legalActionInitiationRequest.getNonPaymentStatus();
        // Assert
        assertEquals(nonPaymentStatus, actualNonPaymentStatus);
    }
}