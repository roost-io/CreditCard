// ********RoostGPT********
/*
Test generated by RoostGPT for test CreditCard-Unit using AI Type Claude AI and AI Model claude-3-opus-20240229

ROOST_METHOD_HASH=getCardLast4_59984ab924
ROOST_METHOD_SIG_HASH=getCardLast4_caa9c9adf0

Here are the JUnit test scenarios for the getCardLast4() method:

Scenario 1: Valid Last 4 Digits of Card Number

Details:
  TestName: validCardLast4ReturnsCorrectValue()
  Description: This test verifies that the getCardLast4() method returns the correct last 4 digits of the card number when a valid value is set.
Execution:
  Arrange: Create an instance of the class containing the getCardLast4() method and set a valid value for the cardLast4 variable.
  Act: Call the getCardLast4() method.
  Assert: Use assertEquals() to verify that the returned value matches the expected last 4 digits of the card number.
Validation:
  The assertion ensures that the getCardLast4() method correctly returns the last 4 digits of the card number when a valid value is set.
  This test is important to validate that the method behaves as expected and returns the correct value for a valid input.

Scenario 2: Null Last 4 Digits of Card Number

Details:
  TestName: nullCardLast4ReturnsNull()
  Description: This test checks that the getCardLast4() method returns null when the cardLast4 variable is set to null.
Execution:
  Arrange: Create an instance of the class containing the getCardLast4() method and set the cardLast4 variable to null.
  Act: Call the getCardLast4() method.
  Assert: Use assertNull() to verify that the returned value is null.
Validation:
  The assertion confirms that the getCardLast4() method handles the case when the cardLast4 variable is null and returns null accordingly.
  This test is crucial to ensure that the method does not throw an exception or return an unexpected value when the cardLast4 variable is null.

Scenario 3: Empty Last 4 Digits of Card Number

Details:
  TestName: emptyCardLast4ReturnsEmptyString()
  Description: This test verifies that the getCardLast4() method returns an empty string when the cardLast4 variable is set to an empty string.
Execution:
  Arrange: Create an instance of the class containing the getCardLast4() method and set the cardLast4 variable to an empty string.
  Act: Call the getCardLast4() method.
  Assert: Use assertEquals() to verify that the returned value is an empty string.
Validation:
  The assertion ensures that the getCardLast4() method handles the case when the cardLast4 variable is an empty string and returns an empty string accordingly.
  This test is important to validate that the method does not modify or manipulate an empty string value and returns it as is.

Scenario 4: Last 4 Digits of Card Number with Leading Zeros

Details:
  TestName: cardLast4WithLeadingZerosReturnsCorrectValue()
  Description: This test checks that the getCardLast4() method returns the correct last 4 digits of the card number when the value contains leading zeros.
Execution:
  Arrange: Create an instance of the class containing the getCardLast4() method and set the cardLast4 variable to a value with leading zeros (e.g., "0012").
  Act: Call the getCardLast4() method.
  Assert: Use assertEquals() to verify that the returned value matches the expected last 4 digits of the card number, including the leading zeros.
Validation:
  The assertion confirms that the getCardLast4() method correctly returns the last 4 digits of the card number, preserving any leading zeros.
  This test is crucial to ensure that the method does not strip or modify leading zeros and returns the exact value stored in the cardLast4 variable.

These test scenarios cover different cases and edge conditions for the getCardLast4() method, including valid values, null values, empty strings, and values with leading zeros. They help ensure the correctness and robustness of the method.
*/

// ********RoostGPT********
package org.openapitools.model;
import org.junit.jupiter.api.Assertions;
import org.junit.jupiter.api.Test;
import org.junit.jupiter.params.ParameterizedTest;
import org.junit.jupiter.params.provider.CsvSource;
import java.net.URI;
import java.util.Objects;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonCreator;
import com.fasterxml.jackson.annotation.JsonTypeName;
import org.openapitools.jackson.nullable.JsonNullable;
import java.time.OffsetDateTime;
import javax.validation.Valid;
import javax.validation.constraints.*;
import io.swagger.v3.oas.annotations.media.Schema;
import java.util.*;
import javax.annotation.Generated;

class CollectionAgencyInvolvementRequestGetCardLast4892Test {
    @Test
    void validCardLast4ReturnsCorrectValue() {
        // Arrange
        CollectionAgencyInvolvementRequest request = new CollectionAgencyInvolvementRequest();
        request.setCardLast4("1234");
        // Act
        String result = request.getCardLast4();
        // Assert
        Assertions.assertEquals("1234", result);
    }
    @Test
    void nullCardLast4ReturnsNull() {
        // Arrange
        CollectionAgencyInvolvementRequest request = new CollectionAgencyInvolvementRequest();
        request.setCardLast4(null);
        // Act
        String result = request.getCardLast4();
        // Assert
        Assertions.assertNull(result);
    }
    @Test
    void emptyCardLast4ReturnsEmptyString() {
        // Arrange
        CollectionAgencyInvolvementRequest request = new CollectionAgencyInvolvementRequest();
        request.setCardLast4("");
        // Act
        String result = request.getCardLast4();
        // Assert
        Assertions.assertEquals("", result);
    }
    @ParameterizedTest
    @CsvSource({
            "0012, 0012",
            "0000, 0000",
            "0123, 0123"
    })
    void cardLast4WithLeadingZerosReturnsCorrectValue(String input, String expected) {
        // Arrange
        CollectionAgencyInvolvementRequest request = new CollectionAgencyInvolvementRequest();
        request.setCardLast4(input);
        // Act
        String result = request.getCardLast4();
        // Assert
        Assertions.assertEquals(expected, result);
    }
}