// ********RoostGPT********
/*
Test generated by RoostGPT for test CreditCard-Unit using AI Type Claude AI and AI Model claude-3-opus-20240229

ROOST_METHOD_HASH=setCardLast4_1ec3bfb1aa
ROOST_METHOD_SIG_HASH=setCardLast4_67db513785

Based on the provided method and imports, here are the generated test scenarios:

Scenario 1: Valid card last 4 digits

Details:
  TestName: validCardLast4ShouldSetValue
  Description: This test verifies that the setCardLast4 method correctly sets the value of cardLast4 when a valid string is provided.
Execution:
  Arrange: Create an instance of the class containing the setCardLast4 method.
  Act: Invoke the setCardLast4 method with a valid string representing the last 4 digits of a card (e.g., "1234").
  Assert: Use assertEquals to verify that the cardLast4 field of the instance is equal to the provided value.
Validation:
  The assertion ensures that the setCardLast4 method correctly assigns the provided value to the cardLast4 field.
  This test is important to validate that the method behaves as expected when given valid input.

Scenario 2: Null card last 4 digits

Details:
  TestName: nullCardLast4ShouldSetNull
  Description: This test checks that the setCardLast4 method sets the cardLast4 field to null when a null value is passed.
Execution:
  Arrange: Create an instance of the class containing the setCardLast4 method.
  Act: Invoke the setCardLast4 method with a null value.
  Assert: Use assertNull to verify that the cardLast4 field of the instance is set to null.
Validation:
  The assertion confirms that the setCardLast4 method correctly handles null input by setting the cardLast4 field to null.
  This test is crucial to ensure that the method does not throw an exception or set an unexpected value when given a null input.

Scenario 3: Empty string card last 4 digits

Details:
  TestName: emptyStringCardLast4ShouldSetEmptyString
  Description: This test verifies that the setCardLast4 method sets the cardLast4 field to an empty string when an empty string is provided.
Execution:
  Arrange: Create an instance of the class containing the setCardLast4 method.
  Act: Invoke the setCardLast4 method with an empty string.
  Assert: Use assertEquals to verify that the cardLast4 field of the instance is equal to an empty string.
Validation:
  The assertion ensures that the setCardLast4 method correctly assigns an empty string to the cardLast4 field when provided with an empty string.
  This test is important to validate that the method handles empty string input as expected.

Scenario 4: Card last 4 digits with leading zeros

Details:
  TestName: cardLast4WithLeadingZerosShouldSetValue
  Description: This test checks that the setCardLast4 method correctly sets the value of cardLast4 when a string with leading zeros is provided.
Execution:
  Arrange: Create an instance of the class containing the setCardLast4 method.
  Act: Invoke the setCardLast4 method with a string representing the last 4 digits of a card with leading zeros (e.g., "0012").
  Assert: Use assertEquals to verify that the cardLast4 field of the instance is equal to the provided value.
Validation:
  The assertion confirms that the setCardLast4 method correctly assigns the provided value to the cardLast4 field, even when the value contains leading zeros.
  This test is crucial to ensure that the method handles card numbers with leading zeros correctly and does not truncate or modify the input.

These test scenarios cover different aspects of the setCardLast4 method, including valid input, null input, empty string input, and input with leading zeros. They ensure that the method behaves as expected in various scenarios and handles edge cases appropriately.
*/

// ********RoostGPT********
package org.openapitools.model;
import org.junit.jupiter.api.Assertions;
import org.junit.jupiter.api.Test;
import org.junit.jupiter.params.ParameterizedTest;
import org.junit.jupiter.params.provider.ValueSource;
import java.net.URI;
import java.util.Objects;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonCreator;
import com.fasterxml.jackson.annotation.JsonTypeName;
import org.openapitools.jackson.nullable.JsonNullable;
import java.time.OffsetDateTime;
import javax.validation.Valid;
import javax.validation.constraints.*;
import io.swagger.v3.oas.annotations.media.Schema;
import java.util.*;
import javax.annotation.Generated;

class CollectionNotificationRequestSetCardLast4Test {
    @Test
    void validCardLast4ShouldSetValue() {
        // Arrange
        CollectionNotificationRequest request = new CollectionNotificationRequest();
        String validCardLast4 = "1234";
        // Act
        request.setCardLast4(validCardLast4);
        // Assert
        Assertions.assertEquals(validCardLast4, request.getCardLast4());
    }
    @Test
    void nullCardLast4ShouldSetNull() {
        // Arrange
        CollectionNotificationRequest request = new CollectionNotificationRequest();
        // Act
        request.setCardLast4(null);
        // Assert
        Assertions.assertNull(request.getCardLast4());
    }
    @Test
    void emptyStringCardLast4ShouldSetEmptyString() {
        // Arrange
        CollectionNotificationRequest request = new CollectionNotificationRequest();
        String emptyString = "";
        // Act
        request.setCardLast4(emptyString);
        // Assert
        Assertions.assertEquals(emptyString, request.getCardLast4());
    }
    @ParameterizedTest
    @ValueSource(strings = {"0000", "0012", "0123"})
    void cardLast4WithLeadingZerosShouldSetValue(String cardLast4WithLeadingZeros) {
        // Arrange
        CollectionNotificationRequest request = new CollectionNotificationRequest();
        // Act
        request.setCardLast4(cardLast4WithLeadingZeros);
        // Assert
        Assertions.assertEquals(cardLast4WithLeadingZeros, request.getCardLast4());
    }
}