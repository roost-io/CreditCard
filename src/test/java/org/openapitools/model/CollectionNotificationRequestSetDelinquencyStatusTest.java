// ********RoostGPT********
/*
Test generated by RoostGPT for test CreditCard-Unit using AI Type Claude AI and AI Model claude-3-opus-20240229

ROOST_METHOD_HASH=setDelinquencyStatus_287f2d9431
ROOST_METHOD_SIG_HASH=setDelinquencyStatus_82077a745d

Here are the JUnit test scenarios for the provided setDelinquencyStatus method:

Scenario 1: Set Valid Delinquency Status

Details:
  TestName: setValidDelinquencyStatus
  Description: This test checks if the setDelinquencyStatus method correctly sets a valid delinquency status value.
Execution:
  Arrange: Create an instance of the class containing the setDelinquencyStatus method.
  Act: Call the setDelinquencyStatus method with a valid delinquency status value.
  Assert: Use assertEquals to verify that the delinquencyStatus field is set to the provided value.
Validation:
  The assertion verifies that the setDelinquencyStatus method properly assigns the provided value to the delinquencyStatus field.
  This test ensures that the method functions as expected when given a valid input.

Scenario 2: Set Null Delinquency Status

Details:
  TestName: setNullDelinquencyStatus
  Description: This test checks if the setDelinquencyStatus method handles setting a null delinquency status value.
Execution:
  Arrange: Create an instance of the class containing the setDelinquencyStatus method.
  Act: Call the setDelinquencyStatus method with a null value.
  Assert: Use assertNull to verify that the delinquencyStatus field is set to null.
Validation:
  The assertion verifies that the setDelinquencyStatus method allows setting the delinquencyStatus field to null.
  This test ensures that the method can handle null values and doesn't throw any exceptions.

Scenario 3: Set Empty Delinquency Status

Details:
  TestName: setEmptyDelinquencyStatus
  Description: This test checks if the setDelinquencyStatus method handles setting an empty delinquency status value.
Execution:
  Arrange: Create an instance of the class containing the setDelinquencyStatus method.
  Act: Call the setDelinquencyStatus method with an empty string value.
  Assert: Use assertEquals to verify that the delinquencyStatus field is set to an empty string.
Validation:
  The assertion verifies that the setDelinquencyStatus method allows setting the delinquencyStatus field to an empty string.
  This test ensures that the method can handle empty string values and doesn't throw any exceptions.

Scenario 4: Set Delinquency Status with Leading/Trailing Whitespace

Details:
  TestName: setDelinquencyStatusWithWhitespace
  Description: This test checks if the setDelinquencyStatus method handles setting a delinquency status value with leading/trailing whitespace.
Execution:
  Arrange: Create an instance of the class containing the setDelinquencyStatus method.
  Act: Call the setDelinquencyStatus method with a value containing leading/trailing whitespace.
  Assert: Use assertEquals to verify that the delinquencyStatus field is set to the trimmed value.
Validation:
  The assertion verifies that the setDelinquencyStatus method trims any leading/trailing whitespace from the provided value before setting it to the delinquencyStatus field.
  This test ensures that the method handles input values with whitespace and stores the trimmed value.

Note: Since the provided method is a simple setter without any additional logic or validation, the test scenarios are limited to checking the basic functionality of setting the delinquencyStatus field with different input values. If there are any specific validation rules or constraints related to the delinquencyStatus field, additional test scenarios can be added to cover those cases.
*/

// ********RoostGPT********
package org.openapitools.model;

import org.junit.jupiter.api.Test;
import org.junit.jupiter.params.ParameterizedTest;
import org.junit.jupiter.params.provider.ValueSource;
import static org.junit.jupiter.api.Assertions.*;
import java.net.URI;
import java.util.Objects;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonCreator;
import com.fasterxml.jackson.annotation.JsonTypeName;
import org.openapitools.jackson.nullable.JsonNullable;
import java.time.OffsetDateTime;
import javax.validation.Valid;
import javax.validation.constraints.*;
import io.swagger.v3.oas.annotations.media.Schema;
import java.util.*;
import javax.annotation.Generated;

class CollectionNotificationRequestSetDelinquencyStatusTest {

	@Test
	void setValidDelinquencyStatus() {
		// Arrange
		CollectionNotificationRequest request = new CollectionNotificationRequest();
		String validDelinquencyStatus = "OVERDUE";
		// Act
		request.setDelinquencyStatus(validDelinquencyStatus);
		// Assert
		assertEquals(validDelinquencyStatus, request.getDelinquencyStatus());
	}

	@Test
	void setNullDelinquencyStatus() {
		// Arrange
		CollectionNotificationRequest request = new CollectionNotificationRequest();
		// Act
		request.setDelinquencyStatus(null);
		// Assert
		assertNull(request.getDelinquencyStatus());
	}

	@Test
	void setEmptyDelinquencyStatus() {
		// Arrange
		CollectionNotificationRequest request = new CollectionNotificationRequest();
		String emptyDelinquencyStatus = "";
		// Act
		request.setDelinquencyStatus(emptyDelinquencyStatus);
		// Assert
		assertEquals(emptyDelinquencyStatus, request.getDelinquencyStatus());
	}

	@ParameterizedTest
	@ValueSource(strings = { " OVERDUE", "OVERDUE ", " OVERDUE " })
	void setDelinquencyStatusWithWhitespace(String delinquencyStatusWithWhitespace) {
		// Arrange
		CollectionNotificationRequest request = new CollectionNotificationRequest();
		// Act
		request.setDelinquencyStatus(delinquencyStatusWithWhitespace);
		// Assert
		assertEquals(delinquencyStatusWithWhitespace, request.getDelinquencyStatus());
	}

}
