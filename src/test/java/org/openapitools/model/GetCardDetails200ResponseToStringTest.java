// ********RoostGPT********
/*
Test generated by RoostGPT for test CreditCard-Unit using AI Type Claude AI and AI Model claude-3-opus-20240229

ROOST_METHOD_HASH=toString_003b8b9872
ROOST_METHOD_SIG_HASH=toString_ceffa8036e

Here are the JUnit test scenarios for the given toString() method:

Scenario 1: Test toString() with a non-null cardNumberPartial value

Details:
  TestName: toStringWithNonNullCardNumberPartial()
  Description: This test verifies that the toString() method correctly includes the non-null cardNumberPartial value in the generated string representation of the GetCardDetails200Response object.
Execution:
  Arrange: Create an instance of GetCardDetails200Response with a non-null cardNumberPartial value.
  Act: Invoke the toString() method on the GetCardDetails200Response instance.
  Assert: Use assertEquals to compare the actual string returned by toString() against the expected string that includes the non-null cardNumberPartial value.
Validation:
  The assertion verifies that the toString() method properly includes the non-null cardNumberPartial value in the generated string representation.
  This test ensures that the toString() method correctly handles non-null values and includes them in the output string, providing a meaningful representation of the object's state.

Scenario 2: Test toString() with a null cardNumberPartial value

Details:
  TestName: toStringWithNullCardNumberPartial()
  Description: This test verifies that the toString() method handles a null cardNumberPartial value gracefully and includes "null" in the generated string representation of the GetCardDetails200Response object.
Execution:
  Arrange: Create an instance of GetCardDetails200Response with a null cardNumberPartial value.
  Act: Invoke the toString() method on the GetCardDetails200Response instance.
  Assert: Use assertEquals to compare the actual string returned by toString() against the expected string that includes "null" for the cardNumberPartial field.
Validation:
  The assertion verifies that the toString() method properly handles a null cardNumberPartial value and includes "null" in the generated string representation.
  This test ensures that the toString() method does not throw any exceptions when encountering null values and provides a consistent string representation even when fields are null.

Scenario 3: Test toString() with an empty GetCardDetails200Response object

Details:
  TestName: toStringWithEmptyObject()
  Description: This test verifies that the toString() method generates the expected string representation for an empty GetCardDetails200Response object, where the cardNumberPartial field is null.
Execution:
  Arrange: Create an empty instance of GetCardDetails200Response without setting any field values.
  Act: Invoke the toString() method on the empty GetCardDetails200Response instance.
  Assert: Use assertEquals to compare the actual string returned by toString() against the expected string for an empty object, which should include "null" for the cardNumberPartial field.
Validation:
  The assertion verifies that the toString() method generates the correct string representation for an empty GetCardDetails200Response object.
  This test ensures that the toString() method handles the case of an empty object correctly and provides a consistent string representation, even when no field values are set.

These test scenarios cover different aspects of the toString() method, including handling non-null values, null values, and empty objects. They ensure that the method generates the expected string representation in each scenario and handles edge cases appropriately.
*/

// ********RoostGPT********
package org.openapitools.model;

import org.junit.jupiter.api.Test;
import org.junit.jupiter.params.ParameterizedTest;
import org.junit.jupiter.params.provider.CsvSource;
import static org.junit.jupiter.api.Assertions.assertEquals;
import java.net.URI;
import java.util.Objects;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonCreator;
import com.fasterxml.jackson.annotation.JsonTypeName;
import org.openapitools.jackson.nullable.JsonNullable;
import java.time.OffsetDateTime;
import javax.validation.Valid;
import javax.validation.constraints.*;
import io.swagger.v3.oas.annotations.media.Schema;
import java.util.*;
import javax.annotation.Generated;

class GetCardDetails200ResponseToStringTest {
    @ParameterizedTest
    @CsvSource({
            "1234, class GetCardDetails200Response {\\n    cardNumberPartial: 1234\\n}",
            "5678, class GetCardDetails200Response {\\n    cardNumberPartial: 5678\\n}",
            "'', class GetCardDetails200Response {\\n    cardNumberPartial: ''\\n}"
    })
    void toStringWithNonNullCardNumberPartial(String cardNumberPartial, String expectedString) {
        GetCardDetails200Response response = new GetCardDetails200Response();
        response.setCardNumberPartial(cardNumberPartial);
        String actualString = response.toString();
        assertEquals(expectedString, actualString);
    }
    
    @Test
    void toStringWithNullCardNumberPartial() {
        GetCardDetails200Response response = new GetCardDetails200Response();
        response.setCardNumberPartial(null);
        String actualString = response.toString();
        String expectedString = "class GetCardDetails200Response {\n" +
                "    cardNumberPartial: null\n" +
                "}";
        assertEquals(expectedString, actualString);
    }
    
    @Test
    void toStringWithEmptyObject() {
        GetCardDetails200Response response = new GetCardDetails200Response();
        String actualString = response.toString();
        String expectedString = "class GetCardDetails200Response {\n" +
                "    cardNumberPartial: null\n" +
                "}";
        assertEquals(expectedString, actualString);
    }
}
