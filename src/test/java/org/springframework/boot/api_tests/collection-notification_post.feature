# ********RoostGPT********

# Test generated by RoostGPT for test CrediCard-Karate using AI Type Claude AI and AI Model claude-3-opus-20240229
# 
# Feature file generated for /collection-notification_post for http method type POST 
# RoostTestHash=c6dc500cd4
# 
# 

# ********RoostGPT********
Feature: Collection Notification API

Background:
  * def urlBase = karate.properties['url.base'] || karate.get('urlBase', 'http://localhost:8080')
  * url urlBase
  * configure headers = { 'Authorization': 'Bearer ' + karate.properties['AUTH_TOKEN'], 'Content-Type': 'application/json' }

Scenario Outline: Test collection notification endpoint with valid request
  Given path '/collection-notification'
  And request
    """
    {
      "delinquencyStatus": "<delinquencyStatus>",
      "outstandingBalance": <outstandingBalance>,
      "additionalCharges": <additionalCharges>,
      "cardLast4": "<cardLast4>"
    }
    """
  When method POST
  Then status 200
  And match response == "#string"

  Examples:
    | delinquencyStatus | outstandingBalance | additionalCharges | cardLast4 |
    | Active            | 1000.00            | 50.00             | 1234      |
    | Inactive          | 500.00             | 0.00              | 5678      |

Scenario: Test collection notification endpoint with missing required fields  
  Given path '/collection-notification'
  And request
    """
    {
      "delinquencyStatus": "Active",
      "outstandingBalance": 1000.00
    }
    """
  When method POST 
  Then status 400

Scenario: Test collection notification endpoint with invalid cardLast4 length
  Given path '/collection-notification'
  And request  
    """
    {
      "delinquencyStatus": "Active",
      "outstandingBalance": 1000.00,
      "additionalCharges": 50.00,
      "cardLast4": "12345"
    }
    """
  When method POST
  Then status 400
