# ********RoostGPT********

# Test generated by RoostGPT for test CrediCard-Karate using AI Type Claude AI and AI Model claude-3-opus-20240229
# 
# Feature file generated for /legal-action_post for http method type POST 
# RoostTestHash=475eb11067
# 
# 

# ********RoostGPT********
Feature: Legal Action API

Background:
  * def urlBase = karate.properties['url.base'] || karate.get('urlBase', 'http://localhost:8080')
  * url urlBase
  * def authToken = karate.properties['AUTH_TOKEN']

Scenario Outline: Initiate Legal Action
  Given path '/legal-action'
  And header Authorization = 'Bearer ' + authToken
  And request
    """
    {
      "nonPaymentStatus": "<nonPaymentStatus>",
      "legalStatus": "<legalStatus>",
      "cardLast4": "<cardLast4>"
    }
    """
  When method POST
  Then status 200
  And match response == "#string"

  Examples:
    | nonPaymentStatus | legalStatus | cardLast4 |
    | pending          | initiated   | 1234      |
    | overdue          | pending     | 5678      |

Scenario: Missing Required Fields
  Given path '/legal-action'
  And header Authorization = 'Bearer ' + authToken
  And request
    """
    {
      "nonPaymentStatus": "pending"
    }
    """
  When method POST
  Then status 422
  # And match response contains "Missing required fields"

Scenario: Invalid Card Last 4
  Given path '/legal-action'
  And header Authorization = 'Bearer ' + authToken
  And request
    """
    {
      "nonPaymentStatus": "pending",
      "legalStatus": "initiated",
      "cardLast4": "123"
    }
    """
  When method POST
  Then status 422
  # And match response contains "Invalid cardLast4 format"
