# ********RoostGPT********

# Test generated by RoostGPT for test CrediCard-Karate using AI Type Claude AI and AI Model claude-3-opus-20240229
# 
# Feature file generated for /legal-action_post for http method type POST 
# RoostTestHash=475eb11067
# 
# 

# ********RoostGPT********
Feature: Legal Action API

  Background:
    * def urlBase = karate.properties['url.base'] || karate.get('urlBase', 'http://localhost:8080')
    * url urlBase
    * def authToken = karate.properties['AUTH_TOKEN']

  Scenario Outline: Initiate Legal Action
    Given path '/legal-action'
    And request
      """
      {
        "nonPaymentStatus": "<nonPaymentStatus>",
        "legalStatus": "<legalStatus>", 
        "cardLast4": "<cardLast4>"
      }
      """
    And header Authorization = authToken
    When method POST
    Then status 200
    And match response == "#string"

    Examples:
      | nonPaymentStatus | legalStatus | cardLast4 |
      | pending          | initiated   | 1234      |
      | overdue          | pending     | 5678      |
      | default          | completed   | 9012      |

  Scenario: Initiate Legal Action with missing required fields
    Given path '/legal-action'
    And request 
      """
      {
        "nonPaymentStatus": "pending"
      }
      """
    And header Authorization = authToken
    When method POST
    Then status 400
    And match response contains "legalStatus is required"
    And match response contains "cardLast4 is required"

  Scenario: Initiate Legal Action with invalid cardLast4 length  
    Given path '/legal-action'
    And request
      """
      {
        "nonPaymentStatus": "pending",
        "legalStatus": "initiated",
        "cardLast4": "123"
      }
      """
    And header Authorization = authToken 
    When method POST
    Then status 400
    And match response contains "cardLast4 must be 4 characters long"
